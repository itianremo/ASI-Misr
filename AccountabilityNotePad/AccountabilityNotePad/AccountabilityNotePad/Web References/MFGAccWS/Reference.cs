//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace AccountabilityNotePad.MFGAccWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MFGAccountabilitySoap", Namespace="http://tempuri.org/")]
    public partial class MFGAccountability : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback ListEmployeeMFGTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMFGTasksSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMFGEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserIsMFGAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetERPSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MFGAccountability() {
            this.Url = global::AccountabilityNotePad.Properties.Settings.Default.AccountabilityNotePad_MFGAccWS_MFGAccountability;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListEmployeeMFGTasksCompletedEventHandler ListEmployeeMFGTasksCompleted;
        
        /// <remarks/>
        public event SaveMFGTasksSheetCompletedEventHandler SaveMFGTasksSheetCompleted;
        
        /// <remarks/>
        public event GetAllMFGEmployeesCompletedEventHandler GetAllMFGEmployeesCompleted;
        
        /// <remarks/>
        public event UserIsMFGAdminCompletedEventHandler UserIsMFGAdminCompleted;
        
        /// <remarks/>
        public event GetERPSessionCompletedEventHandler GetERPSessionCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployeeMFGTasks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListEmployeeMFGTasks(int ContactID, System.DateTime Date) {
            object[] results = this.Invoke("ListEmployeeMFGTasks", new object[] {
                        ContactID,
                        Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListEmployeeMFGTasksAsync(int ContactID, System.DateTime Date) {
            this.ListEmployeeMFGTasksAsync(ContactID, Date, null);
        }
        
        /// <remarks/>
        public void ListEmployeeMFGTasksAsync(int ContactID, System.DateTime Date, object userState) {
            if ((this.ListEmployeeMFGTasksOperationCompleted == null)) {
                this.ListEmployeeMFGTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEmployeeMFGTasksOperationCompleted);
            }
            this.InvokeAsync("ListEmployeeMFGTasks", new object[] {
                        ContactID,
                        Date}, this.ListEmployeeMFGTasksOperationCompleted, userState);
        }
        
        private void OnListEmployeeMFGTasksOperationCompleted(object arg) {
            if ((this.ListEmployeeMFGTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEmployeeMFGTasksCompleted(this, new ListEmployeeMFGTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMFGTasksSheet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveMFGTasksSheet(System.Data.DataSet dsMFGTasks) {
            this.Invoke("SaveMFGTasksSheet", new object[] {
                        dsMFGTasks});
        }
        
        /// <remarks/>
        public void SaveMFGTasksSheetAsync(System.Data.DataSet dsMFGTasks) {
            this.SaveMFGTasksSheetAsync(dsMFGTasks, null);
        }
        
        /// <remarks/>
        public void SaveMFGTasksSheetAsync(System.Data.DataSet dsMFGTasks, object userState) {
            if ((this.SaveMFGTasksSheetOperationCompleted == null)) {
                this.SaveMFGTasksSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMFGTasksSheetOperationCompleted);
            }
            this.InvokeAsync("SaveMFGTasksSheet", new object[] {
                        dsMFGTasks}, this.SaveMFGTasksSheetOperationCompleted, userState);
        }
        
        private void OnSaveMFGTasksSheetOperationCompleted(object arg) {
            if ((this.SaveMFGTasksSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMFGTasksSheetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMFGEmployees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllMFGEmployees() {
            object[] results = this.Invoke("GetAllMFGEmployees", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMFGEmployeesAsync() {
            this.GetAllMFGEmployeesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMFGEmployeesAsync(object userState) {
            if ((this.GetAllMFGEmployeesOperationCompleted == null)) {
                this.GetAllMFGEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMFGEmployeesOperationCompleted);
            }
            this.InvokeAsync("GetAllMFGEmployees", new object[0], this.GetAllMFGEmployeesOperationCompleted, userState);
        }
        
        private void OnGetAllMFGEmployeesOperationCompleted(object arg) {
            if ((this.GetAllMFGEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMFGEmployeesCompleted(this, new GetAllMFGEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserIsMFGAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserIsMFGAdmin(int UserID) {
            object[] results = this.Invoke("UserIsMFGAdmin", new object[] {
                        UserID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserIsMFGAdminAsync(int UserID) {
            this.UserIsMFGAdminAsync(UserID, null);
        }
        
        /// <remarks/>
        public void UserIsMFGAdminAsync(int UserID, object userState) {
            if ((this.UserIsMFGAdminOperationCompleted == null)) {
                this.UserIsMFGAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserIsMFGAdminOperationCompleted);
            }
            this.InvokeAsync("UserIsMFGAdmin", new object[] {
                        UserID}, this.UserIsMFGAdminOperationCompleted, userState);
        }
        
        private void OnUserIsMFGAdminOperationCompleted(object arg) {
            if ((this.UserIsMFGAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserIsMFGAdminCompleted(this, new UserIsMFGAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetERPSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetERPSession(string UserToken) {
            object[] results = this.Invoke("GetERPSession", new object[] {
                        UserToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetERPSessionAsync(string UserToken) {
            this.GetERPSessionAsync(UserToken, null);
        }
        
        /// <remarks/>
        public void GetERPSessionAsync(string UserToken, object userState) {
            if ((this.GetERPSessionOperationCompleted == null)) {
                this.GetERPSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetERPSessionOperationCompleted);
            }
            this.InvokeAsync("GetERPSession", new object[] {
                        UserToken}, this.GetERPSessionOperationCompleted, userState);
        }
        
        private void OnGetERPSessionOperationCompleted(object arg) {
            if ((this.GetERPSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetERPSessionCompleted(this, new GetERPSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string userName, string passWord) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        passWord});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string passWord) {
            this.LoginAsync(userName, passWord, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string passWord, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        passWord}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string tokenField;
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ListEmployeeMFGTasksCompletedEventHandler(object sender, ListEmployeeMFGTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEmployeeMFGTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEmployeeMFGTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveMFGTasksSheetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllMFGEmployeesCompletedEventHandler(object sender, GetAllMFGEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMFGEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMFGEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UserIsMFGAdminCompletedEventHandler(object sender, UserIsMFGAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserIsMFGAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserIsMFGAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetERPSessionCompletedEventHandler(object sender, GetERPSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetERPSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetERPSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591