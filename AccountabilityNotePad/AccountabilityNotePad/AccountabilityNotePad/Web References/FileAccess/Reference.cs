//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace AccountabilityNotePad.FileAccess {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FileAccessServiceSoap", Namespace="http://tempuri.org/")]
    public partial class FileAccessService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateTempFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUpdateFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUpdateModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultipleFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SerivceTimerListenerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FileAccessService() {
            this.Url = global::AccountabilityNotePad.Properties.Settings.Default.AccountabilityNotePad_FileAccess_FileAccessService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateTempFolderCompletedEventHandler CreateTempFolderCompleted;
        
        /// <remarks/>
        public event RemoveUpdateFileCompletedEventHandler RemoveUpdateFileCompleted;
        
        /// <remarks/>
        public event CheckUpdateModeCompletedEventHandler CheckUpdateModeCompleted;
        
        /// <remarks/>
        public event UpdateMultipleFilesCompletedEventHandler UpdateMultipleFilesCompleted;
        
        /// <remarks/>
        public event GetUpdateModeCompletedEventHandler GetUpdateModeCompleted;
        
        /// <remarks/>
        public event SerivceTimerListenerCompletedEventHandler SerivceTimerListenerCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateTempFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateTempFolder(string UserName) {
            object[] results = this.Invoke("CreateTempFolder", new object[] {
                        UserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTempFolderAsync(string UserName) {
            this.CreateTempFolderAsync(UserName, null);
        }
        
        /// <remarks/>
        public void CreateTempFolderAsync(string UserName, object userState) {
            if ((this.CreateTempFolderOperationCompleted == null)) {
                this.CreateTempFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTempFolderOperationCompleted);
            }
            this.InvokeAsync("CreateTempFolder", new object[] {
                        UserName}, this.CreateTempFolderOperationCompleted, userState);
        }
        
        private void OnCreateTempFolderOperationCompleted(object arg) {
            if ((this.CreateTempFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTempFolderCompleted(this, new CreateTempFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveUpdateFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveUpdateFile(string UserName) {
            this.Invoke("RemoveUpdateFile", new object[] {
                        UserName});
        }
        
        /// <remarks/>
        public void RemoveUpdateFileAsync(string UserName) {
            this.RemoveUpdateFileAsync(UserName, null);
        }
        
        /// <remarks/>
        public void RemoveUpdateFileAsync(string UserName, object userState) {
            if ((this.RemoveUpdateFileOperationCompleted == null)) {
                this.RemoveUpdateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUpdateFileOperationCompleted);
            }
            this.InvokeAsync("RemoveUpdateFile", new object[] {
                        UserName}, this.RemoveUpdateFileOperationCompleted, userState);
        }
        
        private void OnRemoveUpdateFileOperationCompleted(object arg) {
            if ((this.RemoveUpdateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUpdateFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUpdateMode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckUpdateMode() {
            this.Invoke("CheckUpdateMode", new object[0]);
        }
        
        /// <remarks/>
        public void CheckUpdateModeAsync() {
            this.CheckUpdateModeAsync(null);
        }
        
        /// <remarks/>
        public void CheckUpdateModeAsync(object userState) {
            if ((this.CheckUpdateModeOperationCompleted == null)) {
                this.CheckUpdateModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUpdateModeOperationCompleted);
            }
            this.InvokeAsync("CheckUpdateMode", new object[0], this.CheckUpdateModeOperationCompleted, userState);
        }
        
        private void OnCheckUpdateModeOperationCompleted(object arg) {
            if ((this.CheckUpdateModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUpdateModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMultipleFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultipleFiles(string UpdateMode, bool ReloadUsers) {
            this.Invoke("UpdateMultipleFiles", new object[] {
                        UpdateMode,
                        ReloadUsers});
        }
        
        /// <remarks/>
        public void UpdateMultipleFilesAsync(string UpdateMode, bool ReloadUsers) {
            this.UpdateMultipleFilesAsync(UpdateMode, ReloadUsers, null);
        }
        
        /// <remarks/>
        public void UpdateMultipleFilesAsync(string UpdateMode, bool ReloadUsers, object userState) {
            if ((this.UpdateMultipleFilesOperationCompleted == null)) {
                this.UpdateMultipleFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleFilesOperationCompleted);
            }
            this.InvokeAsync("UpdateMultipleFiles", new object[] {
                        UpdateMode,
                        ReloadUsers}, this.UpdateMultipleFilesOperationCompleted, userState);
        }
        
        private void OnUpdateMultipleFilesOperationCompleted(object arg) {
            if ((this.UpdateMultipleFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateMode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUpdateMode(string UserName) {
            object[] results = this.Invoke("GetUpdateMode", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateModeAsync(string UserName) {
            this.GetUpdateModeAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetUpdateModeAsync(string UserName, object userState) {
            if ((this.GetUpdateModeOperationCompleted == null)) {
                this.GetUpdateModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateModeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateMode", new object[] {
                        UserName}, this.GetUpdateModeOperationCompleted, userState);
        }
        
        private void OnGetUpdateModeOperationCompleted(object arg) {
            if ((this.GetUpdateModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateModeCompleted(this, new GetUpdateModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SerivceTimerListener", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SerivceTimerListener(string UserName) {
            object[] results = this.Invoke("SerivceTimerListener", new object[] {
                        UserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SerivceTimerListenerAsync(string UserName) {
            this.SerivceTimerListenerAsync(UserName, null);
        }
        
        /// <remarks/>
        public void SerivceTimerListenerAsync(string UserName, object userState) {
            if ((this.SerivceTimerListenerOperationCompleted == null)) {
                this.SerivceTimerListenerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSerivceTimerListenerOperationCompleted);
            }
            this.InvokeAsync("SerivceTimerListener", new object[] {
                        UserName}, this.SerivceTimerListenerOperationCompleted, userState);
        }
        
        private void OnSerivceTimerListenerOperationCompleted(object arg) {
            if ((this.SerivceTimerListenerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SerivceTimerListenerCompleted(this, new SerivceTimerListenerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFile(string DeletUserName) {
            this.Invoke("DeleteFile", new object[] {
                        DeletUserName});
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string DeletUserName) {
            this.DeleteFileAsync(DeletUserName, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string DeletUserName, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        DeletUserName}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CreateTempFolderCompletedEventHandler(object sender, CreateTempFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTempFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTempFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RemoveUpdateFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CheckUpdateModeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateMultipleFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetUpdateModeCompletedEventHandler(object sender, GetUpdateModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SerivceTimerListenerCompletedEventHandler(object sender, SerivceTimerListenerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SerivceTimerListenerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SerivceTimerListenerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591