//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace AccountabilityNotePad.SecurityManagement {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SecurityManagementSoap", Namespace="http://tempuri.org/")]
    public partial class SecurityManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllActiveUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllNonAssignedUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordUserLogInTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllNonUserGroupsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersInUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUsersInUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserGroupXOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRuleEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRuleEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRulesEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserRulesEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralRuleEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEntitiesItemsOfEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRulesEntitiesOfEntityAndEntityValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleGroupOfEntityAndEntityValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRuleGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRuleEntityToRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRuleEntityFromRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRuleEntitiesInRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRuleGroupToUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRuleGroupFromUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyRulesEntitiesInRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRuleEntitiesDataInRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRuleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRuleGroupXOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetHomePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHomePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHomePage1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRulesForEntityTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetERPSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SecurityManagement() {
            this.Url = global::AccountabilityNotePad.Properties.Settings.Default.AccountabilityNotePad_SecurityManagement_SecurityManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event GetAllActiveUsersCompletedEventHandler GetAllActiveUsersCompleted;
        
        /// <remarks/>
        public event ModifyUserCompletedEventHandler ModifyUserCompleted;
        
        /// <remarks/>
        public event GetAllNonAssignedUsersCompletedEventHandler GetAllNonAssignedUsersCompleted;
        
        /// <remarks/>
        public event GetDefaultUserGroupCompletedEventHandler GetDefaultUserGroupCompleted;
        
        /// <remarks/>
        public event RecordUserLogInTimeCompletedEventHandler RecordUserLogInTimeCompleted;
        
        /// <remarks/>
        public event UpdateUserLoginCompletedEventHandler UpdateUserLoginCompleted;
        
        /// <remarks/>
        public event AddUserGroupCompletedEventHandler AddUserGroupCompleted;
        
        /// <remarks/>
        public event GetAllUsersGroupsCompletedEventHandler GetAllUsersGroupsCompleted;
        
        /// <remarks/>
        public event GetAllNonUserGroupsTypeCompletedEventHandler GetAllNonUserGroupsTypeCompleted;
        
        /// <remarks/>
        public event GetUserGroupCompletedEventHandler GetUserGroupCompleted;
        
        /// <remarks/>
        public event GetAllUsersInUserGroupCompletedEventHandler GetAllUsersInUserGroupCompleted;
        
        /// <remarks/>
        public event ModifyUserGroupCompletedEventHandler ModifyUserGroupCompleted;
        
        /// <remarks/>
        public event AddUserToGroupCompletedEventHandler AddUserToGroupCompleted;
        
        /// <remarks/>
        public event RemoveUserFromGroupCompletedEventHandler RemoveUserFromGroupCompleted;
        
        /// <remarks/>
        public event ModifyUsersInUserGroupCompletedEventHandler ModifyUsersInUserGroupCompleted;
        
        /// <remarks/>
        public event DeleteUserGroupCompletedEventHandler DeleteUserGroupCompleted;
        
        /// <remarks/>
        public event DeleteUserGroupXCompletedEventHandler DeleteUserGroupXCompleted;
        
        /// <remarks/>
        public event AddRuleCompletedEventHandler AddRuleCompleted;
        
        /// <remarks/>
        public event GetAllRulesCompletedEventHandler GetAllRulesCompleted;
        
        /// <remarks/>
        public event ModifyRuleCompletedEventHandler ModifyRuleCompleted;
        
        /// <remarks/>
        public event AddRuleEntityCompletedEventHandler AddRuleEntityCompleted;
        
        /// <remarks/>
        public event RemoveRuleEntityCompletedEventHandler RemoveRuleEntityCompleted;
        
        /// <remarks/>
        public event GetAllRulesEntitiesCompletedEventHandler GetAllRulesEntitiesCompleted;
        
        /// <remarks/>
        public event GetAllUserRulesCompletedEventHandler GetAllUserRulesCompleted;
        
        /// <remarks/>
        public event GetAllUserRulesEntitiesCompletedEventHandler GetAllUserRulesEntitiesCompleted;
        
        /// <remarks/>
        public event GetGeneralRuleEntitiesCompletedEventHandler GetGeneralRuleEntitiesCompleted;
        
        /// <remarks/>
        public event GetAllEntitiesCompletedEventHandler GetAllEntitiesCompleted;
        
        /// <remarks/>
        public event GetAllEntitiesItemsOfEntityCompletedEventHandler GetAllEntitiesItemsOfEntityCompleted;
        
        /// <remarks/>
        public event GetAllRulesEntitiesOfEntityAndEntityValueCompletedEventHandler GetAllRulesEntitiesOfEntityAndEntityValueCompleted;
        
        /// <remarks/>
        public event GetRuleGroupOfEntityAndEntityValueCompletedEventHandler GetRuleGroupOfEntityAndEntityValueCompleted;
        
        /// <remarks/>
        public event AddRuleGroupCompletedEventHandler AddRuleGroupCompleted;
        
        /// <remarks/>
        public event GetAllRuleGroupsCompletedEventHandler GetAllRuleGroupsCompleted;
        
        /// <remarks/>
        public event GetRuleGroupCompletedEventHandler GetRuleGroupCompleted;
        
        /// <remarks/>
        public event ModifyRuleGroupCompletedEventHandler ModifyRuleGroupCompleted;
        
        /// <remarks/>
        public event AddRuleEntityToRuleGroupCompletedEventHandler AddRuleEntityToRuleGroupCompleted;
        
        /// <remarks/>
        public event RemoveRuleEntityFromRuleGroupCompletedEventHandler RemoveRuleEntityFromRuleGroupCompleted;
        
        /// <remarks/>
        public event GetAllRuleEntitiesInRuleGroupCompletedEventHandler GetAllRuleEntitiesInRuleGroupCompleted;
        
        /// <remarks/>
        public event AddRuleGroupToUserGroupCompletedEventHandler AddRuleGroupToUserGroupCompleted;
        
        /// <remarks/>
        public event RemoveRuleGroupFromUserGroupCompletedEventHandler RemoveRuleGroupFromUserGroupCompleted;
        
        /// <remarks/>
        public event ModifyRulesEntitiesInRuleGroupCompletedEventHandler ModifyRulesEntitiesInRuleGroupCompleted;
        
        /// <remarks/>
        public event GetAllRuleEntitiesDataInRuleGroupCompletedEventHandler GetAllRuleEntitiesDataInRuleGroupCompleted;
        
        /// <remarks/>
        public event DeleteRuleGroupCompletedEventHandler DeleteRuleGroupCompleted;
        
        /// <remarks/>
        public event DeleteRuleGroupXCompletedEventHandler DeleteRuleGroupXCompleted;
        
        /// <remarks/>
        public event SetHomePageCompletedEventHandler SetHomePageCompleted;
        
        /// <remarks/>
        public event GetHomePageCompletedEventHandler GetHomePageCompleted;
        
        /// <remarks/>
        public event GetHomePage1CompletedEventHandler GetHomePage1Completed;
        
        /// <remarks/>
        public event GetRulesForEntityTypeCompletedEventHandler GetRulesForEntityTypeCompleted;
        
        /// <remarks/>
        public event GetERPSessionCompletedEventHandler GetERPSessionCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUser(string usrName, string password, bool administrator, string winUser) {
            object[] results = this.Invoke("AddUser", new object[] {
                        usrName,
                        password,
                        administrator,
                        winUser});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string usrName, string password, bool administrator, string winUser) {
            this.AddUserAsync(usrName, password, administrator, winUser, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string usrName, string password, bool administrator, string winUser, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        usrName,
                        password,
                        administrator,
                        winUser}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllUsers() {
            object[] results = this.Invoke("GetAllUsers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[0], this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllActiveUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllActiveUsers() {
            object[] results = this.Invoke("GetAllActiveUsers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllActiveUsersAsync() {
            this.GetAllActiveUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllActiveUsersAsync(object userState) {
            if ((this.GetAllActiveUsersOperationCompleted == null)) {
                this.GetAllActiveUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllActiveUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllActiveUsers", new object[0], this.GetAllActiveUsersOperationCompleted, userState);
        }
        
        private void OnGetAllActiveUsersOperationCompleted(object arg) {
            if ((this.GetAllActiveUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllActiveUsersCompleted(this, new GetAllActiveUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyUser(System.Data.DataSet ds) {
            object[] results = this.Invoke("ModifyUser", new object[] {
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUserAsync(System.Data.DataSet ds) {
            this.ModifyUserAsync(ds, null);
        }
        
        /// <remarks/>
        public void ModifyUserAsync(System.Data.DataSet ds, object userState) {
            if ((this.ModifyUserOperationCompleted == null)) {
                this.ModifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserOperationCompleted);
            }
            this.InvokeAsync("ModifyUser", new object[] {
                        ds}, this.ModifyUserOperationCompleted, userState);
        }
        
        private void OnModifyUserOperationCompleted(object arg) {
            if ((this.ModifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserCompleted(this, new ModifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllNonAssignedUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllNonAssignedUsers() {
            object[] results = this.Invoke("GetAllNonAssignedUsers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllNonAssignedUsersAsync() {
            this.GetAllNonAssignedUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllNonAssignedUsersAsync(object userState) {
            if ((this.GetAllNonAssignedUsersOperationCompleted == null)) {
                this.GetAllNonAssignedUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllNonAssignedUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllNonAssignedUsers", new object[0], this.GetAllNonAssignedUsersOperationCompleted, userState);
        }
        
        private void OnGetAllNonAssignedUsersOperationCompleted(object arg) {
            if ((this.GetAllNonAssignedUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllNonAssignedUsersCompleted(this, new GetAllNonAssignedUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDefaultUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDefaultUserGroup(int userID) {
            object[] results = this.Invoke("GetDefaultUserGroup", new object[] {
                        userID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultUserGroupAsync(int userID) {
            this.GetDefaultUserGroupAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetDefaultUserGroupAsync(int userID, object userState) {
            if ((this.GetDefaultUserGroupOperationCompleted == null)) {
                this.GetDefaultUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultUserGroupOperationCompleted);
            }
            this.InvokeAsync("GetDefaultUserGroup", new object[] {
                        userID}, this.GetDefaultUserGroupOperationCompleted, userState);
        }
        
        private void OnGetDefaultUserGroupOperationCompleted(object arg) {
            if ((this.GetDefaultUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultUserGroupCompleted(this, new GetDefaultUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecordUserLogInTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RecordUserLogInTime(string UserName, System.DateTime SignInTime, string SessionID, bool Offline) {
            object[] results = this.Invoke("RecordUserLogInTime", new object[] {
                        UserName,
                        SignInTime,
                        SessionID,
                        Offline});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RecordUserLogInTimeAsync(string UserName, System.DateTime SignInTime, string SessionID, bool Offline) {
            this.RecordUserLogInTimeAsync(UserName, SignInTime, SessionID, Offline, null);
        }
        
        /// <remarks/>
        public void RecordUserLogInTimeAsync(string UserName, System.DateTime SignInTime, string SessionID, bool Offline, object userState) {
            if ((this.RecordUserLogInTimeOperationCompleted == null)) {
                this.RecordUserLogInTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordUserLogInTimeOperationCompleted);
            }
            this.InvokeAsync("RecordUserLogInTime", new object[] {
                        UserName,
                        SignInTime,
                        SessionID,
                        Offline}, this.RecordUserLogInTimeOperationCompleted, userState);
        }
        
        private void OnRecordUserLogInTimeOperationCompleted(object arg) {
            if ((this.RecordUserLogInTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordUserLogInTimeCompleted(this, new RecordUserLogInTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserLogin(System.DateTime SignOutTime, int ID) {
            object[] results = this.Invoke("UpdateUserLogin", new object[] {
                        SignOutTime,
                        ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserLoginAsync(System.DateTime SignOutTime, int ID) {
            this.UpdateUserLoginAsync(SignOutTime, ID, null);
        }
        
        /// <remarks/>
        public void UpdateUserLoginAsync(System.DateTime SignOutTime, int ID, object userState) {
            if ((this.UpdateUserLoginOperationCompleted == null)) {
                this.UpdateUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserLoginOperationCompleted);
            }
            this.InvokeAsync("UpdateUserLogin", new object[] {
                        SignOutTime,
                        ID}, this.UpdateUserLoginOperationCompleted, userState);
        }
        
        private void OnUpdateUserLoginOperationCompleted(object arg) {
            if ((this.UpdateUserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserLoginCompleted(this, new UpdateUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserGroup(string groupName) {
            object[] results = this.Invoke("AddUserGroup", new object[] {
                        groupName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserGroupAsync(string groupName) {
            this.AddUserGroupAsync(groupName, null);
        }
        
        /// <remarks/>
        public void AddUserGroupAsync(string groupName, object userState) {
            if ((this.AddUserGroupOperationCompleted == null)) {
                this.AddUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserGroup", new object[] {
                        groupName}, this.AddUserGroupOperationCompleted, userState);
        }
        
        private void OnAddUserGroupOperationCompleted(object arg) {
            if ((this.AddUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserGroupCompleted(this, new AddUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUsersGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllUsersGroups() {
            object[] results = this.Invoke("GetAllUsersGroups", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersGroupsAsync() {
            this.GetAllUsersGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUsersGroupsAsync(object userState) {
            if ((this.GetAllUsersGroupsOperationCompleted == null)) {
                this.GetAllUsersGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllUsersGroups", new object[0], this.GetAllUsersGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllUsersGroupsOperationCompleted(object arg) {
            if ((this.GetAllUsersGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersGroupsCompleted(this, new GetAllUsersGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllNonUserGroupsType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllNonUserGroupsType() {
            object[] results = this.Invoke("GetAllNonUserGroupsType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllNonUserGroupsTypeAsync() {
            this.GetAllNonUserGroupsTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetAllNonUserGroupsTypeAsync(object userState) {
            if ((this.GetAllNonUserGroupsTypeOperationCompleted == null)) {
                this.GetAllNonUserGroupsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllNonUserGroupsTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllNonUserGroupsType", new object[0], this.GetAllNonUserGroupsTypeOperationCompleted, userState);
        }
        
        private void OnGetAllNonUserGroupsTypeOperationCompleted(object arg) {
            if ((this.GetAllNonUserGroupsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllNonUserGroupsTypeCompleted(this, new GetAllNonUserGroupsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserGroup(int userGroupID) {
            object[] results = this.Invoke("GetUserGroup", new object[] {
                        userGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupAsync(int userGroupID) {
            this.GetUserGroupAsync(userGroupID, null);
        }
        
        /// <remarks/>
        public void GetUserGroupAsync(int userGroupID, object userState) {
            if ((this.GetUserGroupOperationCompleted == null)) {
                this.GetUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupOperationCompleted);
            }
            this.InvokeAsync("GetUserGroup", new object[] {
                        userGroupID}, this.GetUserGroupOperationCompleted, userState);
        }
        
        private void OnGetUserGroupOperationCompleted(object arg) {
            if ((this.GetUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupCompleted(this, new GetUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUsersInUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllUsersInUserGroup(int userGroupID) {
            object[] results = this.Invoke("GetAllUsersInUserGroup", new object[] {
                        userGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersInUserGroupAsync(int userGroupID) {
            this.GetAllUsersInUserGroupAsync(userGroupID, null);
        }
        
        /// <remarks/>
        public void GetAllUsersInUserGroupAsync(int userGroupID, object userState) {
            if ((this.GetAllUsersInUserGroupOperationCompleted == null)) {
                this.GetAllUsersInUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersInUserGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllUsersInUserGroup", new object[] {
                        userGroupID}, this.GetAllUsersInUserGroupOperationCompleted, userState);
        }
        
        private void OnGetAllUsersInUserGroupOperationCompleted(object arg) {
            if ((this.GetAllUsersInUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersInUserGroupCompleted(this, new GetAllUsersInUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyUserGroup(System.Data.DataSet ds) {
            object[] results = this.Invoke("ModifyUserGroup", new object[] {
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUserGroupAsync(System.Data.DataSet ds) {
            this.ModifyUserGroupAsync(ds, null);
        }
        
        /// <remarks/>
        public void ModifyUserGroupAsync(System.Data.DataSet ds, object userState) {
            if ((this.ModifyUserGroupOperationCompleted == null)) {
                this.ModifyUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserGroupOperationCompleted);
            }
            this.InvokeAsync("ModifyUserGroup", new object[] {
                        ds}, this.ModifyUserGroupOperationCompleted, userState);
        }
        
        private void OnModifyUserGroupOperationCompleted(object arg) {
            if ((this.ModifyUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserGroupCompleted(this, new ModifyUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserToGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUserToGroup(int groupID, int userID) {
            object[] results = this.Invoke("AddUserToGroup", new object[] {
                        groupID,
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(int groupID, int userID) {
            this.AddUserToGroupAsync(groupID, userID, null);
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(int groupID, int userID, object userState) {
            if ((this.AddUserToGroupOperationCompleted == null)) {
                this.AddUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserToGroup", new object[] {
                        groupID,
                        userID}, this.AddUserToGroupOperationCompleted, userState);
        }
        
        private void OnAddUserToGroupOperationCompleted(object arg) {
            if ((this.AddUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToGroupCompleted(this, new AddUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveUserFromGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveUserFromGroup(int userID, int userGroupID) {
            object[] results = this.Invoke("RemoveUserFromGroup", new object[] {
                        userID,
                        userGroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(int userID, int userGroupID) {
            this.RemoveUserFromGroupAsync(userID, userGroupID, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(int userID, int userGroupID, object userState) {
            if ((this.RemoveUserFromGroupOperationCompleted == null)) {
                this.RemoveUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromGroup", new object[] {
                        userID,
                        userGroupID}, this.RemoveUserFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromGroupOperationCompleted(object arg) {
            if ((this.RemoveUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromGroupCompleted(this, new RemoveUserFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyUsersInUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyUsersInUserGroup(System.Data.DataSet ds) {
            object[] results = this.Invoke("ModifyUsersInUserGroup", new object[] {
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUsersInUserGroupAsync(System.Data.DataSet ds) {
            this.ModifyUsersInUserGroupAsync(ds, null);
        }
        
        /// <remarks/>
        public void ModifyUsersInUserGroupAsync(System.Data.DataSet ds, object userState) {
            if ((this.ModifyUsersInUserGroupOperationCompleted == null)) {
                this.ModifyUsersInUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUsersInUserGroupOperationCompleted);
            }
            this.InvokeAsync("ModifyUsersInUserGroup", new object[] {
                        ds}, this.ModifyUsersInUserGroupOperationCompleted, userState);
        }
        
        private void OnModifyUsersInUserGroupOperationCompleted(object arg) {
            if ((this.ModifyUsersInUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUsersInUserGroupCompleted(this, new ModifyUsersInUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUserGroup(int usrGrpID) {
            object[] results = this.Invoke("DeleteUserGroup", new object[] {
                        usrGrpID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserGroupAsync(int usrGrpID) {
            this.DeleteUserGroupAsync(usrGrpID, null);
        }
        
        /// <remarks/>
        public void DeleteUserGroupAsync(int usrGrpID, object userState) {
            if ((this.DeleteUserGroupOperationCompleted == null)) {
                this.DeleteUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteUserGroup", new object[] {
                        usrGrpID}, this.DeleteUserGroupOperationCompleted, userState);
        }
        
        private void OnDeleteUserGroupOperationCompleted(object arg) {
            if ((this.DeleteUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserGroupCompleted(this, new DeleteUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUserGroupX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUserGroupX(int usrGrpID) {
            object[] results = this.Invoke("DeleteUserGroupX", new object[] {
                        usrGrpID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserGroupXAsync(int usrGrpID) {
            this.DeleteUserGroupXAsync(usrGrpID, null);
        }
        
        /// <remarks/>
        public void DeleteUserGroupXAsync(int usrGrpID, object userState) {
            if ((this.DeleteUserGroupXOperationCompleted == null)) {
                this.DeleteUserGroupXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserGroupXOperationCompleted);
            }
            this.InvokeAsync("DeleteUserGroupX", new object[] {
                        usrGrpID}, this.DeleteUserGroupXOperationCompleted, userState);
        }
        
        private void OnDeleteUserGroupXOperationCompleted(object arg) {
            if ((this.DeleteUserGroupXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserGroupXCompleted(this, new DeleteUserGroupXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddRule(string ruleName) {
            object[] results = this.Invoke("AddRule", new object[] {
                        ruleName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddRuleAsync(string ruleName) {
            this.AddRuleAsync(ruleName, null);
        }
        
        /// <remarks/>
        public void AddRuleAsync(string ruleName, object userState) {
            if ((this.AddRuleOperationCompleted == null)) {
                this.AddRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRuleOperationCompleted);
            }
            this.InvokeAsync("AddRule", new object[] {
                        ruleName}, this.AddRuleOperationCompleted, userState);
        }
        
        private void OnAddRuleOperationCompleted(object arg) {
            if ((this.AddRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRuleCompleted(this, new AddRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRules() {
            object[] results = this.Invoke("GetAllRules", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRulesAsync() {
            this.GetAllRulesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRulesAsync(object userState) {
            if ((this.GetAllRulesOperationCompleted == null)) {
                this.GetAllRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRulesOperationCompleted);
            }
            this.InvokeAsync("GetAllRules", new object[0], this.GetAllRulesOperationCompleted, userState);
        }
        
        private void OnGetAllRulesOperationCompleted(object arg) {
            if ((this.GetAllRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRulesCompleted(this, new GetAllRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyRule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyRule(System.Data.DataSet ds) {
            object[] results = this.Invoke("ModifyRule", new object[] {
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyRuleAsync(System.Data.DataSet ds) {
            this.ModifyRuleAsync(ds, null);
        }
        
        /// <remarks/>
        public void ModifyRuleAsync(System.Data.DataSet ds, object userState) {
            if ((this.ModifyRuleOperationCompleted == null)) {
                this.ModifyRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyRuleOperationCompleted);
            }
            this.InvokeAsync("ModifyRule", new object[] {
                        ds}, this.ModifyRuleOperationCompleted, userState);
        }
        
        private void OnModifyRuleOperationCompleted(object arg) {
            if ((this.ModifyRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyRuleCompleted(this, new ModifyRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRuleEntity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddRuleEntity(int ruleID, string entityValue, string entityDescription) {
            object[] results = this.Invoke("AddRuleEntity", new object[] {
                        ruleID,
                        entityValue,
                        entityDescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddRuleEntityAsync(int ruleID, string entityValue, string entityDescription) {
            this.AddRuleEntityAsync(ruleID, entityValue, entityDescription, null);
        }
        
        /// <remarks/>
        public void AddRuleEntityAsync(int ruleID, string entityValue, string entityDescription, object userState) {
            if ((this.AddRuleEntityOperationCompleted == null)) {
                this.AddRuleEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRuleEntityOperationCompleted);
            }
            this.InvokeAsync("AddRuleEntity", new object[] {
                        ruleID,
                        entityValue,
                        entityDescription}, this.AddRuleEntityOperationCompleted, userState);
        }
        
        private void OnAddRuleEntityOperationCompleted(object arg) {
            if ((this.AddRuleEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRuleEntityCompleted(this, new AddRuleEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveRuleEntity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveRuleEntity(int ruleEntityID) {
            object[] results = this.Invoke("RemoveRuleEntity", new object[] {
                        ruleEntityID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveRuleEntityAsync(int ruleEntityID) {
            this.RemoveRuleEntityAsync(ruleEntityID, null);
        }
        
        /// <remarks/>
        public void RemoveRuleEntityAsync(int ruleEntityID, object userState) {
            if ((this.RemoveRuleEntityOperationCompleted == null)) {
                this.RemoveRuleEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRuleEntityOperationCompleted);
            }
            this.InvokeAsync("RemoveRuleEntity", new object[] {
                        ruleEntityID}, this.RemoveRuleEntityOperationCompleted, userState);
        }
        
        private void OnRemoveRuleEntityOperationCompleted(object arg) {
            if ((this.RemoveRuleEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRuleEntityCompleted(this, new RemoveRuleEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRulesEntities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRulesEntities() {
            object[] results = this.Invoke("GetAllRulesEntities", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRulesEntitiesAsync() {
            this.GetAllRulesEntitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRulesEntitiesAsync(object userState) {
            if ((this.GetAllRulesEntitiesOperationCompleted == null)) {
                this.GetAllRulesEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRulesEntitiesOperationCompleted);
            }
            this.InvokeAsync("GetAllRulesEntities", new object[0], this.GetAllRulesEntitiesOperationCompleted, userState);
        }
        
        private void OnGetAllRulesEntitiesOperationCompleted(object arg) {
            if ((this.GetAllRulesEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRulesEntitiesCompleted(this, new GetAllRulesEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUserRules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllUserRules() {
            object[] results = this.Invoke("GetAllUserRules", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserRulesAsync() {
            this.GetAllUserRulesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUserRulesAsync(object userState) {
            if ((this.GetAllUserRulesOperationCompleted == null)) {
                this.GetAllUserRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserRulesOperationCompleted);
            }
            this.InvokeAsync("GetAllUserRules", new object[0], this.GetAllUserRulesOperationCompleted, userState);
        }
        
        private void OnGetAllUserRulesOperationCompleted(object arg) {
            if ((this.GetAllUserRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserRulesCompleted(this, new GetAllUserRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUserRulesEntities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllUserRulesEntities() {
            object[] results = this.Invoke("GetAllUserRulesEntities", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserRulesEntitiesAsync() {
            this.GetAllUserRulesEntitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUserRulesEntitiesAsync(object userState) {
            if ((this.GetAllUserRulesEntitiesOperationCompleted == null)) {
                this.GetAllUserRulesEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserRulesEntitiesOperationCompleted);
            }
            this.InvokeAsync("GetAllUserRulesEntities", new object[0], this.GetAllUserRulesEntitiesOperationCompleted, userState);
        }
        
        private void OnGetAllUserRulesEntitiesOperationCompleted(object arg) {
            if ((this.GetAllUserRulesEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserRulesEntitiesCompleted(this, new GetAllUserRulesEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGeneralRuleEntities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGeneralRuleEntities() {
            object[] results = this.Invoke("GetGeneralRuleEntities", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralRuleEntitiesAsync() {
            this.GetGeneralRuleEntitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetGeneralRuleEntitiesAsync(object userState) {
            if ((this.GetGeneralRuleEntitiesOperationCompleted == null)) {
                this.GetGeneralRuleEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralRuleEntitiesOperationCompleted);
            }
            this.InvokeAsync("GetGeneralRuleEntities", new object[0], this.GetGeneralRuleEntitiesOperationCompleted, userState);
        }
        
        private void OnGetGeneralRuleEntitiesOperationCompleted(object arg) {
            if ((this.GetGeneralRuleEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralRuleEntitiesCompleted(this, new GetGeneralRuleEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEntities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllEntities() {
            object[] results = this.Invoke("GetAllEntities", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEntitiesAsync() {
            this.GetAllEntitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllEntitiesAsync(object userState) {
            if ((this.GetAllEntitiesOperationCompleted == null)) {
                this.GetAllEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEntitiesOperationCompleted);
            }
            this.InvokeAsync("GetAllEntities", new object[0], this.GetAllEntitiesOperationCompleted, userState);
        }
        
        private void OnGetAllEntitiesOperationCompleted(object arg) {
            if ((this.GetAllEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEntitiesCompleted(this, new GetAllEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEntitiesItemsOfEntity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllEntitiesItemsOfEntity(int entityID) {
            object[] results = this.Invoke("GetAllEntitiesItemsOfEntity", new object[] {
                        entityID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEntitiesItemsOfEntityAsync(int entityID) {
            this.GetAllEntitiesItemsOfEntityAsync(entityID, null);
        }
        
        /// <remarks/>
        public void GetAllEntitiesItemsOfEntityAsync(int entityID, object userState) {
            if ((this.GetAllEntitiesItemsOfEntityOperationCompleted == null)) {
                this.GetAllEntitiesItemsOfEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEntitiesItemsOfEntityOperationCompleted);
            }
            this.InvokeAsync("GetAllEntitiesItemsOfEntity", new object[] {
                        entityID}, this.GetAllEntitiesItemsOfEntityOperationCompleted, userState);
        }
        
        private void OnGetAllEntitiesItemsOfEntityOperationCompleted(object arg) {
            if ((this.GetAllEntitiesItemsOfEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEntitiesItemsOfEntityCompleted(this, new GetAllEntitiesItemsOfEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRulesEntitiesOfEntityAndEntityValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRulesEntitiesOfEntityAndEntityValue(int entityID, int entityValue) {
            object[] results = this.Invoke("GetAllRulesEntitiesOfEntityAndEntityValue", new object[] {
                        entityID,
                        entityValue});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRulesEntitiesOfEntityAndEntityValueAsync(int entityID, int entityValue) {
            this.GetAllRulesEntitiesOfEntityAndEntityValueAsync(entityID, entityValue, null);
        }
        
        /// <remarks/>
        public void GetAllRulesEntitiesOfEntityAndEntityValueAsync(int entityID, int entityValue, object userState) {
            if ((this.GetAllRulesEntitiesOfEntityAndEntityValueOperationCompleted == null)) {
                this.GetAllRulesEntitiesOfEntityAndEntityValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRulesEntitiesOfEntityAndEntityValueOperationCompleted);
            }
            this.InvokeAsync("GetAllRulesEntitiesOfEntityAndEntityValue", new object[] {
                        entityID,
                        entityValue}, this.GetAllRulesEntitiesOfEntityAndEntityValueOperationCompleted, userState);
        }
        
        private void OnGetAllRulesEntitiesOfEntityAndEntityValueOperationCompleted(object arg) {
            if ((this.GetAllRulesEntitiesOfEntityAndEntityValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRulesEntitiesOfEntityAndEntityValueCompleted(this, new GetAllRulesEntitiesOfEntityAndEntityValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleGroupOfEntityAndEntityValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRuleGroupOfEntityAndEntityValue(int entityID, int entityValue) {
            object[] results = this.Invoke("GetRuleGroupOfEntityAndEntityValue", new object[] {
                        entityID,
                        entityValue});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleGroupOfEntityAndEntityValueAsync(int entityID, int entityValue) {
            this.GetRuleGroupOfEntityAndEntityValueAsync(entityID, entityValue, null);
        }
        
        /// <remarks/>
        public void GetRuleGroupOfEntityAndEntityValueAsync(int entityID, int entityValue, object userState) {
            if ((this.GetRuleGroupOfEntityAndEntityValueOperationCompleted == null)) {
                this.GetRuleGroupOfEntityAndEntityValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleGroupOfEntityAndEntityValueOperationCompleted);
            }
            this.InvokeAsync("GetRuleGroupOfEntityAndEntityValue", new object[] {
                        entityID,
                        entityValue}, this.GetRuleGroupOfEntityAndEntityValueOperationCompleted, userState);
        }
        
        private void OnGetRuleGroupOfEntityAndEntityValueOperationCompleted(object arg) {
            if ((this.GetRuleGroupOfEntityAndEntityValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleGroupOfEntityAndEntityValueCompleted(this, new GetRuleGroupOfEntityAndEntityValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddRuleGroup(string groupName) {
            object[] results = this.Invoke("AddRuleGroup", new object[] {
                        groupName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddRuleGroupAsync(string groupName) {
            this.AddRuleGroupAsync(groupName, null);
        }
        
        /// <remarks/>
        public void AddRuleGroupAsync(string groupName, object userState) {
            if ((this.AddRuleGroupOperationCompleted == null)) {
                this.AddRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRuleGroupOperationCompleted);
            }
            this.InvokeAsync("AddRuleGroup", new object[] {
                        groupName}, this.AddRuleGroupOperationCompleted, userState);
        }
        
        private void OnAddRuleGroupOperationCompleted(object arg) {
            if ((this.AddRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRuleGroupCompleted(this, new AddRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRuleGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRuleGroups() {
            object[] results = this.Invoke("GetAllRuleGroups", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRuleGroupsAsync() {
            this.GetAllRuleGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRuleGroupsAsync(object userState) {
            if ((this.GetAllRuleGroupsOperationCompleted == null)) {
                this.GetAllRuleGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRuleGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllRuleGroups", new object[0], this.GetAllRuleGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllRuleGroupsOperationCompleted(object arg) {
            if ((this.GetAllRuleGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRuleGroupsCompleted(this, new GetAllRuleGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRuleGroup(int ruleGroupID) {
            object[] results = this.Invoke("GetRuleGroup", new object[] {
                        ruleGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleGroupAsync(int ruleGroupID) {
            this.GetRuleGroupAsync(ruleGroupID, null);
        }
        
        /// <remarks/>
        public void GetRuleGroupAsync(int ruleGroupID, object userState) {
            if ((this.GetRuleGroupOperationCompleted == null)) {
                this.GetRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleGroupOperationCompleted);
            }
            this.InvokeAsync("GetRuleGroup", new object[] {
                        ruleGroupID}, this.GetRuleGroupOperationCompleted, userState);
        }
        
        private void OnGetRuleGroupOperationCompleted(object arg) {
            if ((this.GetRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleGroupCompleted(this, new GetRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyRuleGroup(System.Data.DataSet ds) {
            object[] results = this.Invoke("ModifyRuleGroup", new object[] {
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyRuleGroupAsync(System.Data.DataSet ds) {
            this.ModifyRuleGroupAsync(ds, null);
        }
        
        /// <remarks/>
        public void ModifyRuleGroupAsync(System.Data.DataSet ds, object userState) {
            if ((this.ModifyRuleGroupOperationCompleted == null)) {
                this.ModifyRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyRuleGroupOperationCompleted);
            }
            this.InvokeAsync("ModifyRuleGroup", new object[] {
                        ds}, this.ModifyRuleGroupOperationCompleted, userState);
        }
        
        private void OnModifyRuleGroupOperationCompleted(object arg) {
            if ((this.ModifyRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyRuleGroupCompleted(this, new ModifyRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRuleEntityToRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddRuleEntityToRuleGroup(int ruleEntityID, int ruleGroupID) {
            object[] results = this.Invoke("AddRuleEntityToRuleGroup", new object[] {
                        ruleEntityID,
                        ruleGroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddRuleEntityToRuleGroupAsync(int ruleEntityID, int ruleGroupID) {
            this.AddRuleEntityToRuleGroupAsync(ruleEntityID, ruleGroupID, null);
        }
        
        /// <remarks/>
        public void AddRuleEntityToRuleGroupAsync(int ruleEntityID, int ruleGroupID, object userState) {
            if ((this.AddRuleEntityToRuleGroupOperationCompleted == null)) {
                this.AddRuleEntityToRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRuleEntityToRuleGroupOperationCompleted);
            }
            this.InvokeAsync("AddRuleEntityToRuleGroup", new object[] {
                        ruleEntityID,
                        ruleGroupID}, this.AddRuleEntityToRuleGroupOperationCompleted, userState);
        }
        
        private void OnAddRuleEntityToRuleGroupOperationCompleted(object arg) {
            if ((this.AddRuleEntityToRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRuleEntityToRuleGroupCompleted(this, new AddRuleEntityToRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveRuleEntityFromRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveRuleEntityFromRuleGroup(int ruleEntityID, int ruleGroupID) {
            object[] results = this.Invoke("RemoveRuleEntityFromRuleGroup", new object[] {
                        ruleEntityID,
                        ruleGroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveRuleEntityFromRuleGroupAsync(int ruleEntityID, int ruleGroupID) {
            this.RemoveRuleEntityFromRuleGroupAsync(ruleEntityID, ruleGroupID, null);
        }
        
        /// <remarks/>
        public void RemoveRuleEntityFromRuleGroupAsync(int ruleEntityID, int ruleGroupID, object userState) {
            if ((this.RemoveRuleEntityFromRuleGroupOperationCompleted == null)) {
                this.RemoveRuleEntityFromRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRuleEntityFromRuleGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveRuleEntityFromRuleGroup", new object[] {
                        ruleEntityID,
                        ruleGroupID}, this.RemoveRuleEntityFromRuleGroupOperationCompleted, userState);
        }
        
        private void OnRemoveRuleEntityFromRuleGroupOperationCompleted(object arg) {
            if ((this.RemoveRuleEntityFromRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRuleEntityFromRuleGroupCompleted(this, new RemoveRuleEntityFromRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRuleEntitiesInRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRuleEntitiesInRuleGroup(int ruleGroupID) {
            object[] results = this.Invoke("GetAllRuleEntitiesInRuleGroup", new object[] {
                        ruleGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRuleEntitiesInRuleGroupAsync(int ruleGroupID) {
            this.GetAllRuleEntitiesInRuleGroupAsync(ruleGroupID, null);
        }
        
        /// <remarks/>
        public void GetAllRuleEntitiesInRuleGroupAsync(int ruleGroupID, object userState) {
            if ((this.GetAllRuleEntitiesInRuleGroupOperationCompleted == null)) {
                this.GetAllRuleEntitiesInRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRuleEntitiesInRuleGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllRuleEntitiesInRuleGroup", new object[] {
                        ruleGroupID}, this.GetAllRuleEntitiesInRuleGroupOperationCompleted, userState);
        }
        
        private void OnGetAllRuleEntitiesInRuleGroupOperationCompleted(object arg) {
            if ((this.GetAllRuleEntitiesInRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRuleEntitiesInRuleGroupCompleted(this, new GetAllRuleEntitiesInRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRuleGroupToUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddRuleGroupToUserGroup(int userGroupID, int ruleGroupID) {
            object[] results = this.Invoke("AddRuleGroupToUserGroup", new object[] {
                        userGroupID,
                        ruleGroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddRuleGroupToUserGroupAsync(int userGroupID, int ruleGroupID) {
            this.AddRuleGroupToUserGroupAsync(userGroupID, ruleGroupID, null);
        }
        
        /// <remarks/>
        public void AddRuleGroupToUserGroupAsync(int userGroupID, int ruleGroupID, object userState) {
            if ((this.AddRuleGroupToUserGroupOperationCompleted == null)) {
                this.AddRuleGroupToUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRuleGroupToUserGroupOperationCompleted);
            }
            this.InvokeAsync("AddRuleGroupToUserGroup", new object[] {
                        userGroupID,
                        ruleGroupID}, this.AddRuleGroupToUserGroupOperationCompleted, userState);
        }
        
        private void OnAddRuleGroupToUserGroupOperationCompleted(object arg) {
            if ((this.AddRuleGroupToUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRuleGroupToUserGroupCompleted(this, new AddRuleGroupToUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveRuleGroupFromUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveRuleGroupFromUserGroup(int userGroupID, int ruleGroupID) {
            object[] results = this.Invoke("RemoveRuleGroupFromUserGroup", new object[] {
                        userGroupID,
                        ruleGroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveRuleGroupFromUserGroupAsync(int userGroupID, int ruleGroupID) {
            this.RemoveRuleGroupFromUserGroupAsync(userGroupID, ruleGroupID, null);
        }
        
        /// <remarks/>
        public void RemoveRuleGroupFromUserGroupAsync(int userGroupID, int ruleGroupID, object userState) {
            if ((this.RemoveRuleGroupFromUserGroupOperationCompleted == null)) {
                this.RemoveRuleGroupFromUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRuleGroupFromUserGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveRuleGroupFromUserGroup", new object[] {
                        userGroupID,
                        ruleGroupID}, this.RemoveRuleGroupFromUserGroupOperationCompleted, userState);
        }
        
        private void OnRemoveRuleGroupFromUserGroupOperationCompleted(object arg) {
            if ((this.RemoveRuleGroupFromUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRuleGroupFromUserGroupCompleted(this, new RemoveRuleGroupFromUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyRulesEntitiesInRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyRulesEntitiesInRuleGroup(System.Data.DataSet ds) {
            object[] results = this.Invoke("ModifyRulesEntitiesInRuleGroup", new object[] {
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyRulesEntitiesInRuleGroupAsync(System.Data.DataSet ds) {
            this.ModifyRulesEntitiesInRuleGroupAsync(ds, null);
        }
        
        /// <remarks/>
        public void ModifyRulesEntitiesInRuleGroupAsync(System.Data.DataSet ds, object userState) {
            if ((this.ModifyRulesEntitiesInRuleGroupOperationCompleted == null)) {
                this.ModifyRulesEntitiesInRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyRulesEntitiesInRuleGroupOperationCompleted);
            }
            this.InvokeAsync("ModifyRulesEntitiesInRuleGroup", new object[] {
                        ds}, this.ModifyRulesEntitiesInRuleGroupOperationCompleted, userState);
        }
        
        private void OnModifyRulesEntitiesInRuleGroupOperationCompleted(object arg) {
            if ((this.ModifyRulesEntitiesInRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyRulesEntitiesInRuleGroupCompleted(this, new ModifyRulesEntitiesInRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRuleEntitiesDataInRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRuleEntitiesDataInRuleGroup(int ruleGroupID) {
            object[] results = this.Invoke("GetAllRuleEntitiesDataInRuleGroup", new object[] {
                        ruleGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRuleEntitiesDataInRuleGroupAsync(int ruleGroupID) {
            this.GetAllRuleEntitiesDataInRuleGroupAsync(ruleGroupID, null);
        }
        
        /// <remarks/>
        public void GetAllRuleEntitiesDataInRuleGroupAsync(int ruleGroupID, object userState) {
            if ((this.GetAllRuleEntitiesDataInRuleGroupOperationCompleted == null)) {
                this.GetAllRuleEntitiesDataInRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRuleEntitiesDataInRuleGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllRuleEntitiesDataInRuleGroup", new object[] {
                        ruleGroupID}, this.GetAllRuleEntitiesDataInRuleGroupOperationCompleted, userState);
        }
        
        private void OnGetAllRuleEntitiesDataInRuleGroupOperationCompleted(object arg) {
            if ((this.GetAllRuleEntitiesDataInRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRuleEntitiesDataInRuleGroupCompleted(this, new GetAllRuleEntitiesDataInRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRuleGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteRuleGroup(int rlGrpID) {
            object[] results = this.Invoke("DeleteRuleGroup", new object[] {
                        rlGrpID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRuleGroupAsync(int rlGrpID) {
            this.DeleteRuleGroupAsync(rlGrpID, null);
        }
        
        /// <remarks/>
        public void DeleteRuleGroupAsync(int rlGrpID, object userState) {
            if ((this.DeleteRuleGroupOperationCompleted == null)) {
                this.DeleteRuleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRuleGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteRuleGroup", new object[] {
                        rlGrpID}, this.DeleteRuleGroupOperationCompleted, userState);
        }
        
        private void OnDeleteRuleGroupOperationCompleted(object arg) {
            if ((this.DeleteRuleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRuleGroupCompleted(this, new DeleteRuleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRuleGroupX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteRuleGroupX(int rlGrpID) {
            object[] results = this.Invoke("DeleteRuleGroupX", new object[] {
                        rlGrpID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRuleGroupXAsync(int rlGrpID) {
            this.DeleteRuleGroupXAsync(rlGrpID, null);
        }
        
        /// <remarks/>
        public void DeleteRuleGroupXAsync(int rlGrpID, object userState) {
            if ((this.DeleteRuleGroupXOperationCompleted == null)) {
                this.DeleteRuleGroupXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRuleGroupXOperationCompleted);
            }
            this.InvokeAsync("DeleteRuleGroupX", new object[] {
                        rlGrpID}, this.DeleteRuleGroupXOperationCompleted, userState);
        }
        
        private void OnDeleteRuleGroupXOperationCompleted(object arg) {
            if ((this.DeleteRuleGroupXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRuleGroupXCompleted(this, new DeleteRuleGroupXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetHomePage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetHomePage(int UserID, int LinkID) {
            object[] results = this.Invoke("SetHomePage", new object[] {
                        UserID,
                        LinkID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetHomePageAsync(int UserID, int LinkID) {
            this.SetHomePageAsync(UserID, LinkID, null);
        }
        
        /// <remarks/>
        public void SetHomePageAsync(int UserID, int LinkID, object userState) {
            if ((this.SetHomePageOperationCompleted == null)) {
                this.SetHomePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetHomePageOperationCompleted);
            }
            this.InvokeAsync("SetHomePage", new object[] {
                        UserID,
                        LinkID}, this.SetHomePageOperationCompleted, userState);
        }
        
        private void OnSetHomePageOperationCompleted(object arg) {
            if ((this.SetHomePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetHomePageCompleted(this, new SetHomePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHomePage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetHomePage(int UserID) {
            object[] results = this.Invoke("GetHomePage", new object[] {
                        UserID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHomePageAsync(int UserID) {
            this.GetHomePageAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetHomePageAsync(int UserID, object userState) {
            if ((this.GetHomePageOperationCompleted == null)) {
                this.GetHomePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHomePageOperationCompleted);
            }
            this.InvokeAsync("GetHomePage", new object[] {
                        UserID}, this.GetHomePageOperationCompleted, userState);
        }
        
        private void OnGetHomePageOperationCompleted(object arg) {
            if ((this.GetHomePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHomePageCompleted(this, new GetHomePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetHomePage1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHomePageForCurrentUser", RequestElementName="GetHomePageForCurrentUser", RequestNamespace="http://tempuri.org/", ResponseElementName="GetHomePageForCurrentUserResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetHomePageForCurrentUserResult")]
        public int GetHomePage() {
            object[] results = this.Invoke("GetHomePage1", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHomePage1Async() {
            this.GetHomePage1Async(null);
        }
        
        /// <remarks/>
        public void GetHomePage1Async(object userState) {
            if ((this.GetHomePage1OperationCompleted == null)) {
                this.GetHomePage1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHomePage1OperationCompleted);
            }
            this.InvokeAsync("GetHomePage1", new object[0], this.GetHomePage1OperationCompleted, userState);
        }
        
        private void OnGetHomePage1OperationCompleted(object arg) {
            if ((this.GetHomePage1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHomePage1Completed(this, new GetHomePage1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRulesForEntityType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRulesForEntityType(int EntityID) {
            object[] results = this.Invoke("GetRulesForEntityType", new object[] {
                        EntityID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRulesForEntityTypeAsync(int EntityID) {
            this.GetRulesForEntityTypeAsync(EntityID, null);
        }
        
        /// <remarks/>
        public void GetRulesForEntityTypeAsync(int EntityID, object userState) {
            if ((this.GetRulesForEntityTypeOperationCompleted == null)) {
                this.GetRulesForEntityTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRulesForEntityTypeOperationCompleted);
            }
            this.InvokeAsync("GetRulesForEntityType", new object[] {
                        EntityID}, this.GetRulesForEntityTypeOperationCompleted, userState);
        }
        
        private void OnGetRulesForEntityTypeOperationCompleted(object arg) {
            if ((this.GetRulesForEntityTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRulesForEntityTypeCompleted(this, new GetRulesForEntityTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetERPSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetERPSession(string UserToken) {
            object[] results = this.Invoke("GetERPSession", new object[] {
                        UserToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetERPSessionAsync(string UserToken) {
            this.GetERPSessionAsync(UserToken, null);
        }
        
        /// <remarks/>
        public void GetERPSessionAsync(string UserToken, object userState) {
            if ((this.GetERPSessionOperationCompleted == null)) {
                this.GetERPSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetERPSessionOperationCompleted);
            }
            this.InvokeAsync("GetERPSession", new object[] {
                        UserToken}, this.GetERPSessionOperationCompleted, userState);
        }
        
        private void OnGetERPSessionOperationCompleted(object arg) {
            if ((this.GetERPSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetERPSessionCompleted(this, new GetERPSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string userName, string passWord) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        passWord});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string passWord) {
            this.LoginAsync(userName, passWord, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string passWord, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        passWord}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string tokenField;
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllActiveUsersCompletedEventHandler(object sender, GetAllActiveUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllActiveUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllActiveUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ModifyUserCompletedEventHandler(object sender, ModifyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllNonAssignedUsersCompletedEventHandler(object sender, GetAllNonAssignedUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllNonAssignedUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllNonAssignedUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDefaultUserGroupCompletedEventHandler(object sender, GetDefaultUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RecordUserLogInTimeCompletedEventHandler(object sender, RecordUserLogInTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordUserLogInTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordUserLogInTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateUserLoginCompletedEventHandler(object sender, UpdateUserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddUserGroupCompletedEventHandler(object sender, AddUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllUsersGroupsCompletedEventHandler(object sender, GetAllUsersGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllNonUserGroupsTypeCompletedEventHandler(object sender, GetAllNonUserGroupsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllNonUserGroupsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllNonUserGroupsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetUserGroupCompletedEventHandler(object sender, GetUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllUsersInUserGroupCompletedEventHandler(object sender, GetAllUsersInUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersInUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersInUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ModifyUserGroupCompletedEventHandler(object sender, ModifyUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddUserToGroupCompletedEventHandler(object sender, AddUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RemoveUserFromGroupCompletedEventHandler(object sender, RemoveUserFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ModifyUsersInUserGroupCompletedEventHandler(object sender, ModifyUsersInUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUsersInUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUsersInUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteUserGroupCompletedEventHandler(object sender, DeleteUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteUserGroupXCompletedEventHandler(object sender, DeleteUserGroupXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserGroupXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserGroupXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddRuleCompletedEventHandler(object sender, AddRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllRulesCompletedEventHandler(object sender, GetAllRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ModifyRuleCompletedEventHandler(object sender, ModifyRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddRuleEntityCompletedEventHandler(object sender, AddRuleEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRuleEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRuleEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RemoveRuleEntityCompletedEventHandler(object sender, RemoveRuleEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveRuleEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveRuleEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllRulesEntitiesCompletedEventHandler(object sender, GetAllRulesEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRulesEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRulesEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllUserRulesCompletedEventHandler(object sender, GetAllUserRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllUserRulesEntitiesCompletedEventHandler(object sender, GetAllUserRulesEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserRulesEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserRulesEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetGeneralRuleEntitiesCompletedEventHandler(object sender, GetGeneralRuleEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralRuleEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralRuleEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllEntitiesCompletedEventHandler(object sender, GetAllEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllEntitiesItemsOfEntityCompletedEventHandler(object sender, GetAllEntitiesItemsOfEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEntitiesItemsOfEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEntitiesItemsOfEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllRulesEntitiesOfEntityAndEntityValueCompletedEventHandler(object sender, GetAllRulesEntitiesOfEntityAndEntityValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRulesEntitiesOfEntityAndEntityValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRulesEntitiesOfEntityAndEntityValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetRuleGroupOfEntityAndEntityValueCompletedEventHandler(object sender, GetRuleGroupOfEntityAndEntityValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleGroupOfEntityAndEntityValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleGroupOfEntityAndEntityValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddRuleGroupCompletedEventHandler(object sender, AddRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllRuleGroupsCompletedEventHandler(object sender, GetAllRuleGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRuleGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRuleGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetRuleGroupCompletedEventHandler(object sender, GetRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ModifyRuleGroupCompletedEventHandler(object sender, ModifyRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddRuleEntityToRuleGroupCompletedEventHandler(object sender, AddRuleEntityToRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRuleEntityToRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRuleEntityToRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RemoveRuleEntityFromRuleGroupCompletedEventHandler(object sender, RemoveRuleEntityFromRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveRuleEntityFromRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveRuleEntityFromRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllRuleEntitiesInRuleGroupCompletedEventHandler(object sender, GetAllRuleEntitiesInRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRuleEntitiesInRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRuleEntitiesInRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddRuleGroupToUserGroupCompletedEventHandler(object sender, AddRuleGroupToUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRuleGroupToUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRuleGroupToUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RemoveRuleGroupFromUserGroupCompletedEventHandler(object sender, RemoveRuleGroupFromUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveRuleGroupFromUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveRuleGroupFromUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ModifyRulesEntitiesInRuleGroupCompletedEventHandler(object sender, ModifyRulesEntitiesInRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyRulesEntitiesInRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyRulesEntitiesInRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllRuleEntitiesDataInRuleGroupCompletedEventHandler(object sender, GetAllRuleEntitiesDataInRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRuleEntitiesDataInRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRuleEntitiesDataInRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteRuleGroupCompletedEventHandler(object sender, DeleteRuleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRuleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRuleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteRuleGroupXCompletedEventHandler(object sender, DeleteRuleGroupXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRuleGroupXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRuleGroupXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SetHomePageCompletedEventHandler(object sender, SetHomePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetHomePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetHomePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetHomePageCompletedEventHandler(object sender, GetHomePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHomePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHomePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetHomePage1CompletedEventHandler(object sender, GetHomePage1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHomePage1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHomePage1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetRulesForEntityTypeCompletedEventHandler(object sender, GetRulesForEntityTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRulesForEntityTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRulesForEntityTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetERPSessionCompletedEventHandler(object sender, GetERPSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetERPSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetERPSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591