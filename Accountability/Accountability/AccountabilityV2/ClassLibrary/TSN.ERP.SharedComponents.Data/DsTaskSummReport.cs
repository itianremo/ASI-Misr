//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace TSN.ERP.SharedComponents.Data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DsTaskSummReport : DataSet {
        
        private GEN_TasksDataTable tableGEN_Tasks;
        
        public DsTaskSummReport() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DsTaskSummReport(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GEN_Tasks"] != null)) {
                    this.Tables.Add(new GEN_TasksDataTable(ds.Tables["GEN_Tasks"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GEN_TasksDataTable GEN_Tasks {
            get {
                return this.tableGEN_Tasks;
            }
        }
        
        public override DataSet Clone() {
            DsTaskSummReport cln = ((DsTaskSummReport)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["GEN_Tasks"] != null)) {
                this.Tables.Add(new GEN_TasksDataTable(ds.Tables["GEN_Tasks"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableGEN_Tasks = ((GEN_TasksDataTable)(this.Tables["GEN_Tasks"]));
            if ((this.tableGEN_Tasks != null)) {
                this.tableGEN_Tasks.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DsTaskSummReport";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DsTaskSummReport.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableGEN_Tasks = new GEN_TasksDataTable();
            this.Tables.Add(this.tableGEN_Tasks);
        }
        
        private bool ShouldSerializeGEN_Tasks() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void GEN_TasksRowChangeEventHandler(object sender, GEN_TasksRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GEN_TasksDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnprojectID;
            
            private DataColumn columnTaskName;
            
            private DataColumn columnSumValue;
            
            private DataColumn columnTaskCloseDate;
            
            private DataColumn columnProjectName;
            
            private DataColumn columnFullname;
            
            private DataColumn columnJobName;
            
            private DataColumn columnCEName;
            
            private DataColumn columnAssignmentDate;
            
            internal GEN_TasksDataTable() : 
                    base("GEN_Tasks") {
                this.InitClass();
            }
            
            internal GEN_TasksDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn projectIDColumn {
                get {
                    return this.columnprojectID;
                }
            }
            
            internal DataColumn TaskNameColumn {
                get {
                    return this.columnTaskName;
                }
            }
            
            internal DataColumn SumValueColumn {
                get {
                    return this.columnSumValue;
                }
            }
            
            internal DataColumn TaskCloseDateColumn {
                get {
                    return this.columnTaskCloseDate;
                }
            }
            
            internal DataColumn ProjectNameColumn {
                get {
                    return this.columnProjectName;
                }
            }
            
            internal DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            internal DataColumn JobNameColumn {
                get {
                    return this.columnJobName;
                }
            }
            
            internal DataColumn CENameColumn {
                get {
                    return this.columnCEName;
                }
            }
            
            internal DataColumn AssignmentDateColumn {
                get {
                    return this.columnAssignmentDate;
                }
            }
            
            public GEN_TasksRow this[int index] {
                get {
                    return ((GEN_TasksRow)(this.Rows[index]));
                }
            }
            
            public event GEN_TasksRowChangeEventHandler GEN_TasksRowChanged;
            
            public event GEN_TasksRowChangeEventHandler GEN_TasksRowChanging;
            
            public event GEN_TasksRowChangeEventHandler GEN_TasksRowDeleted;
            
            public event GEN_TasksRowChangeEventHandler GEN_TasksRowDeleting;
            
            public void AddGEN_TasksRow(GEN_TasksRow row) {
                this.Rows.Add(row);
            }
            
            public GEN_TasksRow AddGEN_TasksRow(int projectID, string TaskName, System.Decimal SumValue, System.DateTime TaskCloseDate, string ProjectName, string Fullname, string JobName, string CEName, System.DateTime AssignmentDate) {
                GEN_TasksRow rowGEN_TasksRow = ((GEN_TasksRow)(this.NewRow()));
                rowGEN_TasksRow.ItemArray = new object[] {
                        projectID,
                        TaskName,
                        SumValue,
                        TaskCloseDate,
                        ProjectName,
                        Fullname,
                        JobName,
                        CEName,
                        AssignmentDate};
                this.Rows.Add(rowGEN_TasksRow);
                return rowGEN_TasksRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GEN_TasksDataTable cln = ((GEN_TasksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GEN_TasksDataTable();
            }
            
            internal void InitVars() {
                this.columnprojectID = this.Columns["projectID"];
                this.columnTaskName = this.Columns["TaskName"];
                this.columnSumValue = this.Columns["SumValue"];
                this.columnTaskCloseDate = this.Columns["TaskCloseDate"];
                this.columnProjectName = this.Columns["ProjectName"];
                this.columnFullname = this.Columns["Fullname"];
                this.columnJobName = this.Columns["JobName"];
                this.columnCEName = this.Columns["CEName"];
                this.columnAssignmentDate = this.Columns["AssignmentDate"];
            }
            
            private void InitClass() {
                this.columnprojectID = new DataColumn("projectID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnprojectID);
                this.columnTaskName = new DataColumn("TaskName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTaskName);
                this.columnSumValue = new DataColumn("SumValue", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSumValue);
                this.columnTaskCloseDate = new DataColumn("TaskCloseDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTaskCloseDate);
                this.columnProjectName = new DataColumn("ProjectName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProjectName);
                this.columnFullname = new DataColumn("Fullname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFullname);
                this.columnJobName = new DataColumn("JobName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJobName);
                this.columnCEName = new DataColumn("CEName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCEName);
                this.columnAssignmentDate = new DataColumn("AssignmentDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAssignmentDate);
                this.columnTaskName.AllowDBNull = false;
                this.columnSumValue.ReadOnly = true;
                this.columnFullname.AllowDBNull = false;
                this.columnJobName.AllowDBNull = false;
                this.columnCEName.AllowDBNull = false;
                this.columnAssignmentDate.AllowDBNull = false;
            }
            
            public GEN_TasksRow NewGEN_TasksRow() {
                return ((GEN_TasksRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GEN_TasksRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GEN_TasksRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GEN_TasksRowChanged != null)) {
                    this.GEN_TasksRowChanged(this, new GEN_TasksRowChangeEvent(((GEN_TasksRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GEN_TasksRowChanging != null)) {
                    this.GEN_TasksRowChanging(this, new GEN_TasksRowChangeEvent(((GEN_TasksRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GEN_TasksRowDeleted != null)) {
                    this.GEN_TasksRowDeleted(this, new GEN_TasksRowChangeEvent(((GEN_TasksRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GEN_TasksRowDeleting != null)) {
                    this.GEN_TasksRowDeleting(this, new GEN_TasksRowChangeEvent(((GEN_TasksRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGEN_TasksRow(GEN_TasksRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GEN_TasksRow : DataRow {
            
            private GEN_TasksDataTable tableGEN_Tasks;
            
            internal GEN_TasksRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGEN_Tasks = ((GEN_TasksDataTable)(this.Table));
            }
            
            public int projectID {
                get {
                    try {
                        return ((int)(this[this.tableGEN_Tasks.projectIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGEN_Tasks.projectIDColumn] = value;
                }
            }
            
            public string TaskName {
                get {
                    return ((string)(this[this.tableGEN_Tasks.TaskNameColumn]));
                }
                set {
                    this[this.tableGEN_Tasks.TaskNameColumn] = value;
                }
            }
            
            public System.Decimal SumValue {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableGEN_Tasks.SumValueColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGEN_Tasks.SumValueColumn] = value;
                }
            }
            
            public System.DateTime TaskCloseDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGEN_Tasks.TaskCloseDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGEN_Tasks.TaskCloseDateColumn] = value;
                }
            }
            
            public string ProjectName {
                get {
                    try {
                        return ((string)(this[this.tableGEN_Tasks.ProjectNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGEN_Tasks.ProjectNameColumn] = value;
                }
            }
            
            public string Fullname {
                get {
                    return ((string)(this[this.tableGEN_Tasks.FullnameColumn]));
                }
                set {
                    this[this.tableGEN_Tasks.FullnameColumn] = value;
                }
            }
            
            public string JobName {
                get {
                    return ((string)(this[this.tableGEN_Tasks.JobNameColumn]));
                }
                set {
                    this[this.tableGEN_Tasks.JobNameColumn] = value;
                }
            }
            
            public string CEName {
                get {
                    return ((string)(this[this.tableGEN_Tasks.CENameColumn]));
                }
                set {
                    this[this.tableGEN_Tasks.CENameColumn] = value;
                }
            }
            
            public System.DateTime AssignmentDate {
                get {
                    return ((System.DateTime)(this[this.tableGEN_Tasks.AssignmentDateColumn]));
                }
                set {
                    this[this.tableGEN_Tasks.AssignmentDateColumn] = value;
                }
            }
            
            public bool IsprojectIDNull() {
                return this.IsNull(this.tableGEN_Tasks.projectIDColumn);
            }
            
            public void SetprojectIDNull() {
                this[this.tableGEN_Tasks.projectIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSumValueNull() {
                return this.IsNull(this.tableGEN_Tasks.SumValueColumn);
            }
            
            public void SetSumValueNull() {
                this[this.tableGEN_Tasks.SumValueColumn] = System.Convert.DBNull;
            }
            
            public bool IsTaskCloseDateNull() {
                return this.IsNull(this.tableGEN_Tasks.TaskCloseDateColumn);
            }
            
            public void SetTaskCloseDateNull() {
                this[this.tableGEN_Tasks.TaskCloseDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsProjectNameNull() {
                return this.IsNull(this.tableGEN_Tasks.ProjectNameColumn);
            }
            
            public void SetProjectNameNull() {
                this[this.tableGEN_Tasks.ProjectNameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GEN_TasksRowChangeEvent : EventArgs {
            
            private GEN_TasksRow eventRow;
            
            private DataRowAction eventAction;
            
            public GEN_TasksRowChangeEvent(GEN_TasksRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GEN_TasksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
