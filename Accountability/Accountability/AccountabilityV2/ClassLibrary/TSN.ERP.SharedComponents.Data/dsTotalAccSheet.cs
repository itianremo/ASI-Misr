//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace TSN.ERP.SharedComponents.Data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsTotalAccSheet : DataSet {
        
        private TotalAccSheetDataTable tableTotalAccSheet;
        
        public dsTotalAccSheet() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsTotalAccSheet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["TotalAccSheet"] != null)) {
                    this.Tables.Add(new TotalAccSheetDataTable(ds.Tables["TotalAccSheet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TotalAccSheetDataTable TotalAccSheet {
            get {
                return this.tableTotalAccSheet;
            }
        }
        
        public override DataSet Clone() {
            dsTotalAccSheet cln = ((dsTotalAccSheet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["TotalAccSheet"] != null)) {
                this.Tables.Add(new TotalAccSheetDataTable(ds.Tables["TotalAccSheet"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableTotalAccSheet = ((TotalAccSheetDataTable)(this.Tables["TotalAccSheet"]));
            if ((this.tableTotalAccSheet != null)) {
                this.tableTotalAccSheet.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsTotalAccSheet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsTotalAccSheet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableTotalAccSheet = new TotalAccSheetDataTable();
            this.Tables.Add(this.tableTotalAccSheet);
        }
        
        private bool ShouldSerializeTotalAccSheet() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void TotalAccSheetRowChangeEventHandler(object sender, TotalAccSheetRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TotalAccSheetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSunDate;
            
            private DataColumn columnMonDate;
            
            private DataColumn columnTueDate;
            
            private DataColumn columnWedDate;
            
            private DataColumn columnThurDate;
            
            private DataColumn columnFriDate;
            
            private DataColumn columnSatDate;
            
            private DataColumn columnSunTotal;
            
            private DataColumn columnMonTotal;
            
            private DataColumn columnWedTotal;
            
            private DataColumn columnFriTotal;
            
            private DataColumn columnSatTotal;
            
            private DataColumn columnWeekTotal;
            
            private DataColumn columnMonth;
            
            private DataColumn columnWeek;
            
            private DataColumn columnYear;
            
            private DataColumn columnThurTotal;
            
            private DataColumn columnTuesTotal;
            
            private DataColumn columnEmpName;
            
            private DataColumn columnDept;
            
            internal TotalAccSheetDataTable() : 
                    base("TotalAccSheet") {
                this.InitClass();
            }
            
            internal TotalAccSheetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SunDateColumn {
                get {
                    return this.columnSunDate;
                }
            }
            
            internal DataColumn MonDateColumn {
                get {
                    return this.columnMonDate;
                }
            }
            
            internal DataColumn TueDateColumn {
                get {
                    return this.columnTueDate;
                }
            }
            
            internal DataColumn WedDateColumn {
                get {
                    return this.columnWedDate;
                }
            }
            
            internal DataColumn ThurDateColumn {
                get {
                    return this.columnThurDate;
                }
            }
            
            internal DataColumn FriDateColumn {
                get {
                    return this.columnFriDate;
                }
            }
            
            internal DataColumn SatDateColumn {
                get {
                    return this.columnSatDate;
                }
            }
            
            internal DataColumn SunTotalColumn {
                get {
                    return this.columnSunTotal;
                }
            }
            
            internal DataColumn MonTotalColumn {
                get {
                    return this.columnMonTotal;
                }
            }
            
            internal DataColumn WedTotalColumn {
                get {
                    return this.columnWedTotal;
                }
            }
            
            internal DataColumn FriTotalColumn {
                get {
                    return this.columnFriTotal;
                }
            }
            
            internal DataColumn SatTotalColumn {
                get {
                    return this.columnSatTotal;
                }
            }
            
            internal DataColumn WeekTotalColumn {
                get {
                    return this.columnWeekTotal;
                }
            }
            
            internal DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            internal DataColumn WeekColumn {
                get {
                    return this.columnWeek;
                }
            }
            
            internal DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            internal DataColumn ThurTotalColumn {
                get {
                    return this.columnThurTotal;
                }
            }
            
            internal DataColumn TuesTotalColumn {
                get {
                    return this.columnTuesTotal;
                }
            }
            
            internal DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            internal DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            public TotalAccSheetRow this[int index] {
                get {
                    return ((TotalAccSheetRow)(this.Rows[index]));
                }
            }
            
            public event TotalAccSheetRowChangeEventHandler TotalAccSheetRowChanged;
            
            public event TotalAccSheetRowChangeEventHandler TotalAccSheetRowChanging;
            
            public event TotalAccSheetRowChangeEventHandler TotalAccSheetRowDeleted;
            
            public event TotalAccSheetRowChangeEventHandler TotalAccSheetRowDeleting;
            
            public void AddTotalAccSheetRow(TotalAccSheetRow row) {
                this.Rows.Add(row);
            }
            
            public TotalAccSheetRow AddTotalAccSheetRow(
                        System.DateTime SunDate, 
                        System.DateTime MonDate, 
                        System.DateTime TueDate, 
                        System.DateTime WedDate, 
                        System.DateTime ThurDate, 
                        System.DateTime FriDate, 
                        System.DateTime SatDate, 
                        System.Double SunTotal, 
                        System.Double MonTotal, 
                        System.Double WedTotal, 
                        System.Double FriTotal, 
                        System.Double SatTotal, 
                        System.Double WeekTotal, 
                        long Month, 
                        long Week, 
                        long Year, 
                        System.Double ThurTotal, 
                        System.Double TuesTotal, 
                        string EmpName, 
                        string Dept) {
                TotalAccSheetRow rowTotalAccSheetRow = ((TotalAccSheetRow)(this.NewRow()));
                rowTotalAccSheetRow.ItemArray = new object[] {
                        SunDate,
                        MonDate,
                        TueDate,
                        WedDate,
                        ThurDate,
                        FriDate,
                        SatDate,
                        SunTotal,
                        MonTotal,
                        WedTotal,
                        FriTotal,
                        SatTotal,
                        WeekTotal,
                        Month,
                        Week,
                        Year,
                        ThurTotal,
                        TuesTotal,
                        EmpName,
                        Dept};
                this.Rows.Add(rowTotalAccSheetRow);
                return rowTotalAccSheetRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TotalAccSheetDataTable cln = ((TotalAccSheetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TotalAccSheetDataTable();
            }
            
            internal void InitVars() {
                this.columnSunDate = this.Columns["SunDate"];
                this.columnMonDate = this.Columns["MonDate"];
                this.columnTueDate = this.Columns["TueDate"];
                this.columnWedDate = this.Columns["WedDate"];
                this.columnThurDate = this.Columns["ThurDate"];
                this.columnFriDate = this.Columns["FriDate"];
                this.columnSatDate = this.Columns["SatDate"];
                this.columnSunTotal = this.Columns["SunTotal"];
                this.columnMonTotal = this.Columns["MonTotal"];
                this.columnWedTotal = this.Columns["WedTotal"];
                this.columnFriTotal = this.Columns["FriTotal"];
                this.columnSatTotal = this.Columns["SatTotal"];
                this.columnWeekTotal = this.Columns["WeekTotal"];
                this.columnMonth = this.Columns["Month"];
                this.columnWeek = this.Columns["Week"];
                this.columnYear = this.Columns["Year"];
                this.columnThurTotal = this.Columns["ThurTotal"];
                this.columnTuesTotal = this.Columns["TuesTotal"];
                this.columnEmpName = this.Columns["EmpName"];
                this.columnDept = this.Columns["Dept"];
            }
            
            private void InitClass() {
                this.columnSunDate = new DataColumn("SunDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSunDate);
                this.columnMonDate = new DataColumn("MonDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMonDate);
                this.columnTueDate = new DataColumn("TueDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTueDate);
                this.columnWedDate = new DataColumn("WedDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWedDate);
                this.columnThurDate = new DataColumn("ThurDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThurDate);
                this.columnFriDate = new DataColumn("FriDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFriDate);
                this.columnSatDate = new DataColumn("SatDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSatDate);
                this.columnSunTotal = new DataColumn("SunTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSunTotal);
                this.columnMonTotal = new DataColumn("MonTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMonTotal);
                this.columnWedTotal = new DataColumn("WedTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWedTotal);
                this.columnFriTotal = new DataColumn("FriTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFriTotal);
                this.columnSatTotal = new DataColumn("SatTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSatTotal);
                this.columnWeekTotal = new DataColumn("WeekTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWeekTotal);
                this.columnMonth = new DataColumn("Month", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMonth);
                this.columnWeek = new DataColumn("Week", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWeek);
                this.columnYear = new DataColumn("Year", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYear);
                this.columnThurTotal = new DataColumn("ThurTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThurTotal);
                this.columnTuesTotal = new DataColumn("TuesTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTuesTotal);
                this.columnEmpName = new DataColumn("EmpName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmpName);
                this.columnDept = new DataColumn("Dept", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDept);
            }
            
            public TotalAccSheetRow NewTotalAccSheetRow() {
                return ((TotalAccSheetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TotalAccSheetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TotalAccSheetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TotalAccSheetRowChanged != null)) {
                    this.TotalAccSheetRowChanged(this, new TotalAccSheetRowChangeEvent(((TotalAccSheetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TotalAccSheetRowChanging != null)) {
                    this.TotalAccSheetRowChanging(this, new TotalAccSheetRowChangeEvent(((TotalAccSheetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TotalAccSheetRowDeleted != null)) {
                    this.TotalAccSheetRowDeleted(this, new TotalAccSheetRowChangeEvent(((TotalAccSheetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TotalAccSheetRowDeleting != null)) {
                    this.TotalAccSheetRowDeleting(this, new TotalAccSheetRowChangeEvent(((TotalAccSheetRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTotalAccSheetRow(TotalAccSheetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TotalAccSheetRow : DataRow {
            
            private TotalAccSheetDataTable tableTotalAccSheet;
            
            internal TotalAccSheetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTotalAccSheet = ((TotalAccSheetDataTable)(this.Table));
            }
            
            public System.DateTime SunDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTotalAccSheet.SunDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.SunDateColumn] = value;
                }
            }
            
            public System.DateTime MonDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTotalAccSheet.MonDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.MonDateColumn] = value;
                }
            }
            
            public System.DateTime TueDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTotalAccSheet.TueDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.TueDateColumn] = value;
                }
            }
            
            public System.DateTime WedDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTotalAccSheet.WedDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.WedDateColumn] = value;
                }
            }
            
            public System.DateTime ThurDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTotalAccSheet.ThurDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.ThurDateColumn] = value;
                }
            }
            
            public System.DateTime FriDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTotalAccSheet.FriDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.FriDateColumn] = value;
                }
            }
            
            public System.DateTime SatDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTotalAccSheet.SatDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.SatDateColumn] = value;
                }
            }
            
            public System.Double SunTotal {
                get {
                    try {
                        return ((System.Double)(this[this.tableTotalAccSheet.SunTotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.SunTotalColumn] = value;
                }
            }
            
            public System.Double MonTotal {
                get {
                    try {
                        return ((System.Double)(this[this.tableTotalAccSheet.MonTotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.MonTotalColumn] = value;
                }
            }
            
            public System.Double WedTotal {
                get {
                    try {
                        return ((System.Double)(this[this.tableTotalAccSheet.WedTotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.WedTotalColumn] = value;
                }
            }
            
            public System.Double FriTotal {
                get {
                    try {
                        return ((System.Double)(this[this.tableTotalAccSheet.FriTotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.FriTotalColumn] = value;
                }
            }
            
            public System.Double SatTotal {
                get {
                    try {
                        return ((System.Double)(this[this.tableTotalAccSheet.SatTotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.SatTotalColumn] = value;
                }
            }
            
            public System.Double WeekTotal {
                get {
                    try {
                        return ((System.Double)(this[this.tableTotalAccSheet.WeekTotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.WeekTotalColumn] = value;
                }
            }
            
            public long Month {
                get {
                    try {
                        return ((long)(this[this.tableTotalAccSheet.MonthColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.MonthColumn] = value;
                }
            }
            
            public long Week {
                get {
                    try {
                        return ((long)(this[this.tableTotalAccSheet.WeekColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.WeekColumn] = value;
                }
            }
            
            public long Year {
                get {
                    try {
                        return ((long)(this[this.tableTotalAccSheet.YearColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.YearColumn] = value;
                }
            }
            
            public System.Double ThurTotal {
                get {
                    try {
                        return ((System.Double)(this[this.tableTotalAccSheet.ThurTotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.ThurTotalColumn] = value;
                }
            }
            
            public System.Double TuesTotal {
                get {
                    try {
                        return ((System.Double)(this[this.tableTotalAccSheet.TuesTotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.TuesTotalColumn] = value;
                }
            }
            
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tableTotalAccSheet.EmpNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.EmpNameColumn] = value;
                }
            }
            
            public string Dept {
                get {
                    try {
                        return ((string)(this[this.tableTotalAccSheet.DeptColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalAccSheet.DeptColumn] = value;
                }
            }
            
            public bool IsSunDateNull() {
                return this.IsNull(this.tableTotalAccSheet.SunDateColumn);
            }
            
            public void SetSunDateNull() {
                this[this.tableTotalAccSheet.SunDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsMonDateNull() {
                return this.IsNull(this.tableTotalAccSheet.MonDateColumn);
            }
            
            public void SetMonDateNull() {
                this[this.tableTotalAccSheet.MonDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsTueDateNull() {
                return this.IsNull(this.tableTotalAccSheet.TueDateColumn);
            }
            
            public void SetTueDateNull() {
                this[this.tableTotalAccSheet.TueDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsWedDateNull() {
                return this.IsNull(this.tableTotalAccSheet.WedDateColumn);
            }
            
            public void SetWedDateNull() {
                this[this.tableTotalAccSheet.WedDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsThurDateNull() {
                return this.IsNull(this.tableTotalAccSheet.ThurDateColumn);
            }
            
            public void SetThurDateNull() {
                this[this.tableTotalAccSheet.ThurDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsFriDateNull() {
                return this.IsNull(this.tableTotalAccSheet.FriDateColumn);
            }
            
            public void SetFriDateNull() {
                this[this.tableTotalAccSheet.FriDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsSatDateNull() {
                return this.IsNull(this.tableTotalAccSheet.SatDateColumn);
            }
            
            public void SetSatDateNull() {
                this[this.tableTotalAccSheet.SatDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsSunTotalNull() {
                return this.IsNull(this.tableTotalAccSheet.SunTotalColumn);
            }
            
            public void SetSunTotalNull() {
                this[this.tableTotalAccSheet.SunTotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsMonTotalNull() {
                return this.IsNull(this.tableTotalAccSheet.MonTotalColumn);
            }
            
            public void SetMonTotalNull() {
                this[this.tableTotalAccSheet.MonTotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsWedTotalNull() {
                return this.IsNull(this.tableTotalAccSheet.WedTotalColumn);
            }
            
            public void SetWedTotalNull() {
                this[this.tableTotalAccSheet.WedTotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsFriTotalNull() {
                return this.IsNull(this.tableTotalAccSheet.FriTotalColumn);
            }
            
            public void SetFriTotalNull() {
                this[this.tableTotalAccSheet.FriTotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsSatTotalNull() {
                return this.IsNull(this.tableTotalAccSheet.SatTotalColumn);
            }
            
            public void SetSatTotalNull() {
                this[this.tableTotalAccSheet.SatTotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsWeekTotalNull() {
                return this.IsNull(this.tableTotalAccSheet.WeekTotalColumn);
            }
            
            public void SetWeekTotalNull() {
                this[this.tableTotalAccSheet.WeekTotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsMonthNull() {
                return this.IsNull(this.tableTotalAccSheet.MonthColumn);
            }
            
            public void SetMonthNull() {
                this[this.tableTotalAccSheet.MonthColumn] = System.Convert.DBNull;
            }
            
            public bool IsWeekNull() {
                return this.IsNull(this.tableTotalAccSheet.WeekColumn);
            }
            
            public void SetWeekNull() {
                this[this.tableTotalAccSheet.WeekColumn] = System.Convert.DBNull;
            }
            
            public bool IsYearNull() {
                return this.IsNull(this.tableTotalAccSheet.YearColumn);
            }
            
            public void SetYearNull() {
                this[this.tableTotalAccSheet.YearColumn] = System.Convert.DBNull;
            }
            
            public bool IsThurTotalNull() {
                return this.IsNull(this.tableTotalAccSheet.ThurTotalColumn);
            }
            
            public void SetThurTotalNull() {
                this[this.tableTotalAccSheet.ThurTotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsTuesTotalNull() {
                return this.IsNull(this.tableTotalAccSheet.TuesTotalColumn);
            }
            
            public void SetTuesTotalNull() {
                this[this.tableTotalAccSheet.TuesTotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsEmpNameNull() {
                return this.IsNull(this.tableTotalAccSheet.EmpNameColumn);
            }
            
            public void SetEmpNameNull() {
                this[this.tableTotalAccSheet.EmpNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeptNull() {
                return this.IsNull(this.tableTotalAccSheet.DeptColumn);
            }
            
            public void SetDeptNull() {
                this[this.tableTotalAccSheet.DeptColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TotalAccSheetRowChangeEvent : EventArgs {
            
            private TotalAccSheetRow eventRow;
            
            private DataRowAction eventAction;
            
            public TotalAccSheetRowChangeEvent(TotalAccSheetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TotalAccSheetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
