//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TSN.ERP.Timing.Data {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("dsTiming_MonthBalance")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsTiming_MonthBalance : System.Data.DataSet {
        
        private Timing_MonthBalanceDataTable tableTiming_MonthBalance;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsTiming_MonthBalance() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsTiming_MonthBalance(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Timing_MonthBalance"] != null)) {
                    base.Tables.Add(new Timing_MonthBalanceDataTable(ds.Tables["Timing_MonthBalance"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Timing_MonthBalanceDataTable Timing_MonthBalance {
            get {
                return this.tableTiming_MonthBalance;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            dsTiming_MonthBalance cln = ((dsTiming_MonthBalance)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Timing_MonthBalance"] != null)) {
                    base.Tables.Add(new Timing_MonthBalanceDataTable(ds.Tables["Timing_MonthBalance"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTiming_MonthBalance = ((Timing_MonthBalanceDataTable)(base.Tables["Timing_MonthBalance"]));
            if ((initTable == true)) {
                if ((this.tableTiming_MonthBalance != null)) {
                    this.tableTiming_MonthBalance.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsTiming_MonthBalance";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsTiming_MonthBalance.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTiming_MonthBalance = new Timing_MonthBalanceDataTable();
            base.Tables.Add(this.tableTiming_MonthBalance);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTiming_MonthBalance() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            dsTiming_MonthBalance ds = new dsTiming_MonthBalance();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void Timing_MonthBalanceRowChangeEventHandler(object sender, Timing_MonthBalanceRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Timing_MonthBalanceDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnContactID;
            
            private System.Data.DataColumn columnYear;
            
            private System.Data.DataColumn columnMonth;
            
            private System.Data.DataColumn columnStartDate;
            
            private System.Data.DataColumn columnEndDate;
            
            private System.Data.DataColumn columnWorkTime;
            
            private System.Data.DataColumn columnOverTime;
            
            private System.Data.DataColumn columnBulkTime;
            
            private System.Data.DataColumn columnQTused;
            
            private System.Data.DataColumn columnPaid;
            
            private System.Data.DataColumn columnPlus;
            
            private System.Data.DataColumn columnBonus;
            
            private System.Data.DataColumn columnSerial;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Timing_MonthBalanceDataTable() {
                this.TableName = "Timing_MonthBalance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Timing_MonthBalanceDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Timing_MonthBalanceDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ContactIDColumn {
                get {
                    return this.columnContactID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WorkTimeColumn {
                get {
                    return this.columnWorkTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OverTimeColumn {
                get {
                    return this.columnOverTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BulkTimeColumn {
                get {
                    return this.columnBulkTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QTusedColumn {
                get {
                    return this.columnQTused;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PaidColumn {
                get {
                    return this.columnPaid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PlusColumn {
                get {
                    return this.columnPlus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BonusColumn {
                get {
                    return this.columnBonus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SerialColumn {
                get {
                    return this.columnSerial;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Timing_MonthBalanceRow this[int index] {
                get {
                    return ((Timing_MonthBalanceRow)(this.Rows[index]));
                }
            }
            
            public event Timing_MonthBalanceRowChangeEventHandler Timing_MonthBalanceRowChanging;
            
            public event Timing_MonthBalanceRowChangeEventHandler Timing_MonthBalanceRowChanged;
            
            public event Timing_MonthBalanceRowChangeEventHandler Timing_MonthBalanceRowDeleting;
            
            public event Timing_MonthBalanceRowChangeEventHandler Timing_MonthBalanceRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTiming_MonthBalanceRow(Timing_MonthBalanceRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Timing_MonthBalanceRow AddTiming_MonthBalanceRow(int ContactID, int Year, int Month, System.DateTime StartDate, System.DateTime EndDate, decimal WorkTime, decimal OverTime, decimal BulkTime, decimal QTused, decimal Paid, decimal Plus, decimal Bonus, int Serial) {
                Timing_MonthBalanceRow rowTiming_MonthBalanceRow = ((Timing_MonthBalanceRow)(this.NewRow()));
                rowTiming_MonthBalanceRow.ItemArray = new object[] {
                        ContactID,
                        Year,
                        Month,
                        StartDate,
                        EndDate,
                        WorkTime,
                        OverTime,
                        BulkTime,
                        QTused,
                        Paid,
                        Plus,
                        Bonus,
                        Serial};
                this.Rows.Add(rowTiming_MonthBalanceRow);
                return rowTiming_MonthBalanceRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Timing_MonthBalanceRow FindBySerial(int Serial) {
                return ((Timing_MonthBalanceRow)(this.Rows.Find(new object[] {
                            Serial})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                Timing_MonthBalanceDataTable cln = ((Timing_MonthBalanceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new Timing_MonthBalanceDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnContactID = base.Columns["ContactID"];
                this.columnYear = base.Columns["Year"];
                this.columnMonth = base.Columns["Month"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnWorkTime = base.Columns["WorkTime"];
                this.columnOverTime = base.Columns["OverTime"];
                this.columnBulkTime = base.Columns["BulkTime"];
                this.columnQTused = base.Columns["QTused"];
                this.columnPaid = base.Columns["Paid"];
                this.columnPlus = base.Columns["Plus"];
                this.columnBonus = base.Columns["Bonus"];
                this.columnSerial = base.Columns["Serial"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnContactID = new System.Data.DataColumn("ContactID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactID);
                this.columnYear = new System.Data.DataColumn("Year", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnMonth = new System.Data.DataColumn("Month", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnStartDate = new System.Data.DataColumn("StartDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new System.Data.DataColumn("EndDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnWorkTime = new System.Data.DataColumn("WorkTime", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkTime);
                this.columnOverTime = new System.Data.DataColumn("OverTime", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTime);
                this.columnBulkTime = new System.Data.DataColumn("BulkTime", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBulkTime);
                this.columnQTused = new System.Data.DataColumn("QTused", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTused);
                this.columnPaid = new System.Data.DataColumn("Paid", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid);
                this.columnPlus = new System.Data.DataColumn("Plus", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlus);
                this.columnBonus = new System.Data.DataColumn("Bonus", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonus);
                this.columnSerial = new System.Data.DataColumn("Serial", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerial);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSerial}, true));
                this.columnContactID.AllowDBNull = false;
                this.columnYear.AllowDBNull = false;
                this.columnMonth.AllowDBNull = false;
                this.columnStartDate.AllowDBNull = false;
                this.columnEndDate.AllowDBNull = false;
                this.columnSerial.AllowDBNull = false;
                this.columnSerial.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Timing_MonthBalanceRow NewTiming_MonthBalanceRow() {
                return ((Timing_MonthBalanceRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new Timing_MonthBalanceRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(Timing_MonthBalanceRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Timing_MonthBalanceRowChanged != null)) {
                    this.Timing_MonthBalanceRowChanged(this, new Timing_MonthBalanceRowChangeEvent(((Timing_MonthBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Timing_MonthBalanceRowChanging != null)) {
                    this.Timing_MonthBalanceRowChanging(this, new Timing_MonthBalanceRowChangeEvent(((Timing_MonthBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Timing_MonthBalanceRowDeleted != null)) {
                    this.Timing_MonthBalanceRowDeleted(this, new Timing_MonthBalanceRowChangeEvent(((Timing_MonthBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Timing_MonthBalanceRowDeleting != null)) {
                    this.Timing_MonthBalanceRowDeleting(this, new Timing_MonthBalanceRowChangeEvent(((Timing_MonthBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTiming_MonthBalanceRow(Timing_MonthBalanceRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsTiming_MonthBalance ds = new dsTiming_MonthBalance();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Timing_MonthBalanceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Timing_MonthBalanceRow : System.Data.DataRow {
            
            private Timing_MonthBalanceDataTable tableTiming_MonthBalance;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Timing_MonthBalanceRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTiming_MonthBalance = ((Timing_MonthBalanceDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactID {
                get {
                    return ((int)(this[this.tableTiming_MonthBalance.ContactIDColumn]));
                }
                set {
                    this[this.tableTiming_MonthBalance.ContactIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Year {
                get {
                    return ((int)(this[this.tableTiming_MonthBalance.YearColumn]));
                }
                set {
                    this[this.tableTiming_MonthBalance.YearColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Month {
                get {
                    return ((int)(this[this.tableTiming_MonthBalance.MonthColumn]));
                }
                set {
                    this[this.tableTiming_MonthBalance.MonthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    return ((System.DateTime)(this[this.tableTiming_MonthBalance.StartDateColumn]));
                }
                set {
                    this[this.tableTiming_MonthBalance.StartDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    return ((System.DateTime)(this[this.tableTiming_MonthBalance.EndDateColumn]));
                }
                set {
                    this[this.tableTiming_MonthBalance.EndDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WorkTime {
                get {
                    try {
                        return ((decimal)(this[this.tableTiming_MonthBalance.WorkTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WorkTime\' in table \'Timing_MonthBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTiming_MonthBalance.WorkTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverTime {
                get {
                    try {
                        return ((decimal)(this[this.tableTiming_MonthBalance.OverTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OverTime\' in table \'Timing_MonthBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTiming_MonthBalance.OverTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BulkTime {
                get {
                    try {
                        return ((decimal)(this[this.tableTiming_MonthBalance.BulkTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BulkTime\' in table \'Timing_MonthBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTiming_MonthBalance.BulkTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QTused {
                get {
                    try {
                        return ((decimal)(this[this.tableTiming_MonthBalance.QTusedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QTused\' in table \'Timing_MonthBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTiming_MonthBalance.QTusedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Paid {
                get {
                    try {
                        return ((decimal)(this[this.tableTiming_MonthBalance.PaidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Paid\' in table \'Timing_MonthBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTiming_MonthBalance.PaidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Plus {
                get {
                    try {
                        return ((decimal)(this[this.tableTiming_MonthBalance.PlusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Plus\' in table \'Timing_MonthBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTiming_MonthBalance.PlusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bonus {
                get {
                    try {
                        return ((decimal)(this[this.tableTiming_MonthBalance.BonusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Bonus\' in table \'Timing_MonthBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTiming_MonthBalance.BonusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Serial {
                get {
                    return ((int)(this[this.tableTiming_MonthBalance.SerialColumn]));
                }
                set {
                    this[this.tableTiming_MonthBalance.SerialColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTimeNull() {
                return this.IsNull(this.tableTiming_MonthBalance.WorkTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTimeNull() {
                this[this.tableTiming_MonthBalance.WorkTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverTimeNull() {
                return this.IsNull(this.tableTiming_MonthBalance.OverTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverTimeNull() {
                this[this.tableTiming_MonthBalance.OverTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBulkTimeNull() {
                return this.IsNull(this.tableTiming_MonthBalance.BulkTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBulkTimeNull() {
                this[this.tableTiming_MonthBalance.BulkTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTusedNull() {
                return this.IsNull(this.tableTiming_MonthBalance.QTusedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTusedNull() {
                this[this.tableTiming_MonthBalance.QTusedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidNull() {
                return this.IsNull(this.tableTiming_MonthBalance.PaidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidNull() {
                this[this.tableTiming_MonthBalance.PaidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlusNull() {
                return this.IsNull(this.tableTiming_MonthBalance.PlusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlusNull() {
                this[this.tableTiming_MonthBalance.PlusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBonusNull() {
                return this.IsNull(this.tableTiming_MonthBalance.BonusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBonusNull() {
                this[this.tableTiming_MonthBalance.BonusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Timing_MonthBalanceRowChangeEvent : System.EventArgs {
            
            private Timing_MonthBalanceRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Timing_MonthBalanceRowChangeEvent(Timing_MonthBalanceRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Timing_MonthBalanceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591